startup();
q()
startup();
get.item.data
library
library(evecalc)
detach(evecalv)
detach(evecalc)
detach('evecalc')
?detach
search()
detach('package:evecalc')
library(evecalc)
q()
startup();
getwd()
lsos()
bpcost
q()
startup();
q()
y
startup();
lsos()
name.dt
library(evecalc)
naem.dt <- get.name.data()
name.dt <- get.name.data()
rm(naem.dt)
item.dt <- get.item.data();
item.dt
name.dt
item.dt[grep('Material', categoryName)]
item.dt[grep('Material', categoryName)][1:20]
item.dt[grep('Material', categoryName)]$groupName
options
option
options()
item.dt[grep('Material', categoryName)]
item.dt[grep('Material', categoryName)][published == 1]
item.dt[grep('Material', categoryName)][published == 1]$typeName
item.dt[grep('Material', categoryName)][published == 1]$typeID
idlist.material <- item.dt[grep('Material', categoryName)][published == 1]$typeID
item.dt[grep('Material', categoryName)][published == 1]
item.dt[grep("Robotics", typeName)]
item.dt[categoryName == 'Material'][published == 1]
item.dt[categoryName == 'Material'][published == 1]
idlist.material <- item.dt[categoryName == 'Material'][published == 1]$typeID
idlist.material
pricedata.material.dt <- get.evecentral.data(idlist.material)
pricedata.material.dt <- get.evecentral.data(idlist.material, name.dt)
pricedata.material.dt
lsos()
library(devtools)
dev_mode()
load_all('evecalc')
load_all('../evecalc')
pricedata.material.dt <- get.evecentral.data(idlist.material, name.dt)
get.evecentral.data
pricedata.material.dt <- get.evecentral.data(idlist.material, name.dt = name.dt)
pricedata.material.dt
item.dt[grep('Nid', typeName)]
calculate.advanced.construction.cost(24483, ME = c(1, 30), price.dt = pricedata.dt)
calculate.advanced.construction.cost(24483, ME = c(1, 30), price.dt = pricedata.material.dt)
calculate.advanced.construction.cost(24483, ME = c(1, 30), price.dt = pricedata.material.dt, verbose = FALSE)
calculate.construction.cost
dev_mode()
q()
y
startup();
dev_mode()
load_all('../evecalc/', reset = TRUE)
pricedata.dt
lsos()
startup();
lsos()
rm(args, special)
rm(bpcost)
pricedata.material.dt <- get.evecentral.data(idlist.material)
pricedata.material.dt <- get.evecentral.data(idlist.material, system = 'Dodixie')
pricedata.material.dt <- get.evecentral.data(idlist.material, system = 'Dodixie', name.dt = name.dt)
load_all('../evecalc/', reset = TRUE)
pricedata.material.dt <- get.evecentral.data(idlist.material, system = 'Dodixie', name.dt = name.dt)
library(XML)
pricedata.material.dt <- get.evecentral.data(idlist.material, system = 'Dodixie', name.dt = name.dt)
pricedata.material.dt
item.dt[grep('Manticore', typeName)]
calculate.advanced.construction.cost(12032, ME = c(-4, 30), price.dt = pricedata.material.dt)
load_all('../evecalc/', reset = TRUE)
calculate.advanced.construction.cost(12032, ME = c(-4, 30), price.dt = pricedata.material.dt)
load_all('../evecalc/', reset = TRUE); calculate.advanced.construction.cost(12032, ME = c(-4, 30), price.dt = pricedata.material.dt)
load_all('../evecalc/', reset = TRUE); calculate.advanced.construction.cost(12032, ME = c(-4, 30), price.dt = pricedata.material.dt)
load_all('../evecalc/', reset = TRUE); calculate.advanced.construction.cost(12032, ME = c(-4, 30), price.dt = pricedata.material.dt)
load_all('../evecalc/', reset = TRUE); calculate.advanced.construction.cost(12032, ME = c(-4, 30), price.dt = pricedata.material.dt)
load_all('../evecalc/', reset = TRUE); calculate.advanced.construction.cost(12032, ME = c(-4, 30), price.dt = pricedata.material.dt, verbose = T)
item.dt[typeID %in% pricedata.material.dt$typeID]
item.dt[typeID %in% pricedata.material.dt$typeID][grep('Blocks', typeName)]
item.dt[grep('Planet', categoryName)]
item.dt[categoryID == 43]
pricedata.pi.dt <- get.evecentral.data(item.dt[categoryID == 43]$typeID);
pricedata.pi.dt <- get.evecentral.data(item.dt[categoryID == 43]$typeID, name.dt = name.dt, system = 'Dodixie');
pricedata.dt <- rbind(pricedata.material.dt, pricedata.pi.dt)
load_all('../evecalc/', reset = TRUE); calculate.advanced.construction.cost(12032, ME = c(-4, 30), price.dt = pricedata.dt, verbose = T)
load_all('../evecalc/', reset = TRUE); calculate.advanced.construction.cost(12032, ME = c(-4, 30), price.dt = pricedata.dt, verbose = F)
document('../evecalc')
document('../evecalc')
document('../evecalc')
document('../evecalc')
document('../evecalc')
document('../evecalc')
load_all('../evecalc/', reset = TRUE); calculate.advanced.construction.cost(12032, ME = c(-4, 30), price.dt = pricedata.dt, verbose = F)
load_all('../evecalc/', reset = TRUE);
load_all('../evecalc/', reset = TRUE);
load_all('../evecalc/', reset = TRUE);
load_all('../evecalc/', reset = TRUE);
item.dt[grep('Thorax', typeName)]
calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE)
bpcost.dt
bpcost
bpcost.dt <- data.table(read.csv('~/workspace/eveindustry/data/bpcost.csv'))
bpcost.dt
bpcost.dt <- data.table(typeID = 627, typeName = 'Thorax', bpcost = 100000)
bpcost.dt
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
document('../evecalc/')
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
bpcost.dt
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = FALSE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = FALSE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)[, sum(requiredCost)]
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)[, sum(requiredCost)]
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = FALSE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = FALSE, bpcost.dt = bpcost.dt)
bpcost.dt
bpcost.dt <- data.table(typeID = c(627, 40), bpcost = c(100000, 10))
bpcost.dt
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = FALSE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = FALSE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = FALSE, bpcost.dt = bpcost.dt)
bpcost.dt
head(bpcost.dt)
str(bpcost.dt)
bpcost.dt
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = FALSE, bpcost.dt = bpcost.dt)
bpcost.dt <- data.table(typeID = c(627, 40), typeName = c('Thorax', 'Megacyte'), bpcost = c(100000, 10))
bpcost.dt
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = FALSE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = TRUE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = FALSE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); with(calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = FALSE, bpcost.dt = bpcost.dt), buildCost - materialCost)
load_all('../evecalc', reset = TRUE); with(calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = FALSE, bpcost.dt = bpcost.dt), buildCost - materialCost)
load_all('../evecalc', reset = TRUE); calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = FALSE, bpcost.dt = bpcost.dt)
load_all('../evecalc', reset = TRUE); with(calculate.construction.cost(627, ME = 30, price.dt = pricedata.dt, verbose = FALSE, bpcost.dt = bpcost.dt), buildCost - materialCost)
document('../evecalc/')
lsos()
pricedata.dt
item.dt[grep('Ishtar', typeName)]
calculate.advanced.construction.cost(12005, ME = c(-4, 30), price.dt = pricedata.dt)
calculate.advanced.construction.cost(12005, ME = c(-4, 30), price.dt = pricedata.dt, verbose = TRUE)
calculate.advanced.construction.cost(12005, ME = c(-4, 30), price.dt = pricedata.dt, verbose = FALSE)
calculate.advanced.construction.cost(12005, ME = c(-1, 30), price.dt = pricedata.dt, verbose = FALSE)
lsos()
item.dt[grep('Datacore', typeName)]
item.dt[grep('Datacore', typeName)][1:10]
item.dt[grep('Datacore', typeName)][published == 1]
item.dt[groupName == 'Datacores'][published == 1]
idlist.datacore <- item.dt[groupName == 'Datacores'][published == 1]$typeID
pricedata.datacore.dt <- get.evecentral.data(idlist.datacore)
pricedata.datacore.dt <- get.evecentral.data(idlist.datacore, name.dt = name.dt)
pricedata.dt <- rbind(pricedata.material.dt, pricedata.pi.dt, pricedata.datacore.dt)
pricedata.dt
pricedata.dt[, list(spread = ask / bid)]
pricedata.dt[, list(typeID, spread = ask / bid)]
pricedata.dt[, list(typeID, spread = ask / bid)][order(-spread)]
pricedata.dt[, list(typeID, spread = ask / bid)]
pricedata.dt
test('../evecalc')
test('../evecalc')
lsos()
item.dt
item.dt[grep('Kestrel', typeName)]
item.dt[grep('Cloaking', typeName)]
item.dt[grep('Ops', typeName)]
item.dt[grep('Cloaking', typeName)][1:10]
item.dt[typeID == 11370]
item.dt[grep('Cloaking.*Blueprint', typeName]
item.dt[grep('Cloaking.*Blueprint', typeName)]
item.dt[grep('Energized Adaptive.*II', typeName)]
?grep
item.dt[grep('Energized Adaptive.*II', typeName, useBytes = TRUE)]
item.dt[grep('Energized Adaptive.*II', typeName, useBytes = FALSE)]
item.dt[grep('Energized Adaptive.*II', typeName, useBytes = TRUE)]
q()
y
lsos()
getwd()
item.dt[grep('Energized Adaptive.*II', typeName, useBytes = TRUE)]
item.dt
startup();
item.dt[grep('Energized Adaptive.*II', typeName, useBytes = TRUE)]
lsos()
q()
startup();
q()
y
startup();
lsos()
c("ABX.TSX", "AGU.TSX", "ARX.TSX", "BMO.TSX", "BNS.TSX", "CM.TSX",
"CNR.TSX", "COS.TSX", "CP.TSX", "CTC.A.TSX", "ELD.TSX", "ENB.TSX",
"FM.TSX", "FTS.TSX", "K.TSX", "L.TSX", "MFC.TSX", "NXY.TSX",
"POT.TSX", "POW.TSX", "RCI.B.TSX", "RIM.TSX", "RY.TSX", "SC.TSX",
"SU.TSX", "TCK.B.TSX", "THI.TSX", "TLM.TSX", "TRP.TSX", "VRX.TSX",
"WN.TSX", "XEG.TSX", "XFN.TSX", "XGD.TSX", "XIU.TSX", "XMA.TSX"
)
symbols.portfolio <- c("ABX.TSX", "AGU.TSX", "ARX.TSX", "BMO.TSX", "BNS.TSX", "CM.TSX",
"CNR.TSX", "COS.TSX", "CP.TSX", "CTC.A.TSX", "ELD.TSX", "ENB.TSX",
"FM.TSX", "FTS.TSX", "K.TSX", "L.TSX", "MFC.TSX", "NXY.TSX",
"POT.TSX", "POW.TSX", "RCI.B.TSX", "RIM.TSX", "RY.TSX", "SC.TSX",
"SU.TSX", "TCK.B.TSX", "THI.TSX", "TLM.TSX", "TRP.TSX", "VRX.TSX",
"WN.TSX", "XEG.TSX", "XFN.TSX", "XGD.TSX", "XIU.TSX", "XMA.TSX"
)
symbols.portfolio
gsub('\\.TSX', '', symbols.portfolio)
stem <- gsub('\\.TSX', '', symbols.portfolio)
rm(symbols.portfolio,stem)
lsos()
pricedata.material.dt
pricedata.material.dt$typeID
dev_mode(TRUE)
load_all('../evecalc')
load_all('../evecalc'); pricedata.material.dt <- get.evecentral.data(pricedata.material.dt$typeID);
load_all('../evecalc'); pricedata.material.dt <- get.evecentral.data(pricedata.material.dt$typeID, name.dt = name.dt);
pricedata.material.dt
q()
y
startup();
lsos()
dev_mode(TRUE);
startup();
load_all('../evecalc')
lsos()
item.dt[grep('Planetary Comm', categoryName)]
item.dt[grep('Planetary Comm', categoryName)]$typeID
get.evecentral.data(item.dt[grep('Planetary Comm', categoryName)]$typeID, system = 'Amarr', name.dt = name.dt)
price.catcando.dt <- get.evecentral.data(item.dt[grep('Planetary Comm', categoryName)]$typeID, system = 'Amarr', name.dt = name.dt)
price.catcando.dt
item.dt
item.dt[, list(typeID, typeName, groupName, categoryName)]
merge(price.catcando.dt, item.dt[, list(typeID, typeName, groupName, categoryName)])
merge(price.catcando.dt, item.dt[, list(typeID, typeName, groupName, categoryName)])[, list(typeID, typeName, groupName, categoryName, system, bid, ask, price)]
merge(price.catcando.dt, item.dt[, list(typeID, typeName, groupName, categoryName)])[, list(typeID, typeName, groupName, categoryName, system, bid, ask, price, cashmatprice = bid * 0.9)]
merge(price.catcando.dt, item.dt[, list(typeID, typeName, groupName, categoryName)])[, list(typeID, typeName, groupName, categoryName, system, bid, ask, price, cashmatprice = round(bid * 0.9, 2))]
merge(price.catcando.dt, item.dt[, list(typeID, typeName, groupName, categoryName)])[, list(typeID, typeName, groupName, categoryName, system, bid, ask, price, cashmatprice = round(bid * 0.9, 2))][order(typeID)]
write.csv(merge(price.catcando.dt, item.dt[, list(typeID, typeName, groupName, categoryName)])[, list(typeID, typeName, groupName, categoryName, system, bid, ask, price, cashmatprice = round(bid * 0.9, 2))][order(typeID)], file = '~/Dropbox/Temp/catcando.csv')
q()
y
q()
startup();
dev_mode(TRUE);
startup();
q()
lsos()
rm(list = ls())
startup();
dev_mode(TRUE); load_all('../evecalc/')
getwd()
lsos()
getwd()
lsos()
startup();
lsos()
q()
lsos()
q()
dev_mode(TRUE); load_all('../evecalc/'); startup();
lsos()
idlist.marketdata
get.evecentral.data
item.dt[grep('Fulleride', typeName)]
idlist.marketdata
prices.hubs.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Dodixie', 'Amarr', 'Jita', 'Rens'))
prices.hubs.dt
tables()
setkey(prices.hubs.dt, typeID)
item.dt[price.hubs.dt]
item.dt[prices.hubs.dt]
item.dt[typeName == 'Brutix']
calculate.construction.cost(16229, ME = 30, price.dt = prices.hubs.dt[system == 'Dodixie'])
calculate.construction.cost(16229, ME = 30, price.dt = prices.hubs.dt[system == 'Dodixie'], verbose = TRUE)
prices.hubs.dt[system == 'Dodixie']
prices.hubs.dt[system == 'Dodixie'][typeID %in% 34:40]
idlist.marketdata
prices.hubs.dt
prices.hubs.dt[, dim(.SD)[1], by = typeID]
prices.hubs.dt[, dim(.SD)[1], by = typeID][V1 != 4]
dim(prices.hubs.dt)
prices.hubs.dt[, dim(.SD)[2], by = typeID]
prices.hubs.dt[, dim(.SD)[2], by = typeID][V1 != 4]
prices.hubs.dt[, dim(.SD)[2], by = typeID][typeID %in% 34:40]
prices.hubs.dt[typeID %in% 34:40]
rm(prices.hubs.dt)
q()
dev_mode(TRUE); load_all('../evecalc'); startup();
lsos()
get.evecentral.data
idlist.material
idlist.marketdata
sort(idlist.marketdata)
unique(sort(idlist.marketdata))
prices.hubs.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Dodixie', 'Amarr', 'Jita', 'Rens'))
load_all('../evecalc')
prices.hubs.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Dodixie', 'Amarr', 'Jita', 'Rens'))
price.hubs.dt <- prices.hubs.dt
rm(prices.hubs.dt)
lsos()
price.hubs.dt
price.hubs.dt[system == 'Dodixie']
price.hubs.dt[system == 'Dodixie'][typeID %in% 34:40]
calculate.construction.cost(16229, ME = 30, price.dt = price.hubs.dt[system == 'Dodixie'])
calculate.construction.cost(16229, ME = 30, price.dt = price.hubs.dt[system == 'Dodixie'], verbose = TRUE)
price.hubs.dt[system == 'Dodixie'][typeName == 'Brutix']
price.hubs.dt[system == 'Dodixie'][typeID == 16229]
construction.ships$typeID
calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = price.hubs.dt[system == 'Dodixie'])
load_all('../evecalc'); calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = price.hubs.dt[system == 'Dodixie'])
load_all('../evecalc'); calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = price.hubs.dt[system == 'Dodixie'])
load_all('../evecalc'); calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = price.hubs.dt[system == 'Dodixie'])
load_all('../evecalc'); calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = price.hubs.dt[system == 'Dodixie'])
price.dt
tables()
setkey(price.hubs.dt, typeID)
load_all('../evecalc'); calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = price.hubs.dt[system == 'Dodixie'])
load_all('../evecalc'); calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = price.hubs.dt[system == 'Dodixie'])
load_all('../evecalc'); calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = item.dt[price.hubs.dt][system == 'Dodixie'])
load_all('../evecalc'); calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = item.dt[price.hubs.dt][system == 'Dodixie'][, list(typeID, typeName, bid, ask, price)])
load_all('../evecalc'); profit.dt <- calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = item.dt[price.hubs.dt][system == 'Dodixie'][, list(typeID, typeName, bid, ask, price)])
construction.t2mods
item.dt[grep(' II$', typeName)]
item.dt[grep(' II$', typeName)][!is.na(marketGroupID)]
?grep
item.dt[!is.na(marketGroupID)][grep(' II$', typeName)]
item.dt[!is.na(marketGroupID)][grep(' II$', typeName, use.perl = TRUE)]
?grep
item.dt[!is.na(marketGroupID)][grep(' II$', typeName, useBytes = TRUE)]
item.dt[!is.na(marketGroupID)][grep(' II$', typeName, useBytes = TRUE)]$typeID
get.blueprint.data(356499)
get.blueprint.
get.blueprint.data
calculate.construction.cost
calculate.construction.cost
load_all('../evecalc')
get.blueprint.data
get.blueprint.data
get.blueprint.data(356499)
item.dt[!is.na(marketGroupID)][grep(' II$', typeName, useBytes = TRUE)]
lsos()
price.hubs.dt
profit.dt
load_all('../evecalc'); profit.dt <- calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = item.dt[price.hubs.dt][system == 'Dodixie'][, list(typeID, typeName, groupName, categoryName, bid, ask, price)])
profit.dt
profit.dt[groupName == 'Combat Battlecruiser']
profit.dt[grep('Combat Battlecruiser', groupName)]
profit.dt[grep('Battlecruiser', groupName)]
profit.dt
profit.dt[, list(typeID, typeName, buildCost, buildWaste, price, margin)]
profit.dt[, list(typeID, typeName, groupName, categoryName, buildCost, buildWaste, bid, ask, price, margin)]
price.hubs.dt
price.hubs.dt[system == 'Jita']
item.dt[price.hubs.dt][system == 'Jita']
item.dt[price.hubs.dt][system == 'Jita'][grep('Amarr Fuel', typeName)]
item.dt[price.hubs.dt][system == 'Jita'][grep('Amarr Fuel', typeName)]$bid * 1.05
round(item.dt[price.hubs.dt][system == 'Jita'][grep('Amarr Fuel', typeName)]$bid * 1.05, 2)
round(item.dt[price.hubs.dt][system == 'Jita'][grep('Amarr Fuel', typeName)]$bid * 1.05, 2) * 7000
format(round(item.dt[price.hubs.dt][system == 'Jita'][grep('Amarr Fuel', typeName)]$bid * 1.05, 2) * 7000)
format(round(item.dt[price.hubs.dt][system == 'Jita'][grep('Amarr Fuel', typeName)]$bid * 1.05, 2) * 7000, bid.mark = 2)
format(round(item.dt[price.hubs.dt][system == 'Jita'][grep('Amarr Fuel', typeName)]$bid * 1.05, 2) * 7000, big.mark = 2)
format(round(item.dt[price.hubs.dt][system == 'Jita'][grep('Amarr Fuel', typeName)]$bid * 1.05, 2) * 7000, big.mark = ',')
item.dt[grep('Polymer', typeName)]
item.dt[grep('Epoxy', typeName)]
get.blueprint.data(30310)
prices.hubs.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Dodixie', 'Amarr', 'Jita', 'Rens'))
prices.hubs.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Dodixie', 'Amarr', 'Jita', 'Rens'))
price.hubs.dt[system == 'Jita']
item.dt[categoryName == 'Planetary Commodities']
item.dt[categoryName == 'Planetary Commodities']$typeID
pi.pricelist.dt <- price.hubs.dt[typeID %in% item.dt[categoryName == 'Planetary Commodities']$typeID]
pr.pricelist.dt
pi.pricelist.dt
pi.pricelist.dt <- price.hubs.dt[system == 'Jita'][typeID %in% item.dt[categoryName == 'Planetary Commodities']$typeID]
pi.pricelist.dt
pi.pricelist.dt <- item.dt[price.hubs.dt][system == 'Jita'][typeID %in% item.dt[categoryName == 'Planetary Commodities']$typeID]
pi.pricelist.dt
item.dt[price.hubs.dt][system == 'Jita'][typeID %in% item.dt[categoryName == 'Planetary Commodities']$typeID]
pi.pricelist.dt <- item.dt[price.hubs.dt][system == 'Jita'][typeID %in% item.dt[categoryName == 'Planetary Commodities']$typeID]
item.dt[categoryName == 'Asteroid']
item.dt[categoryName == 'Asteroid'][published == 1]
idlist.marketdata
item.dt[categoryName == 'Asteroid'][!is.na(marketGroupID)]
item.dt[categoryName == 'Asteroid'][!is.na(marketGroupID)]$typeID
c(idlist.marketdata, item.dt[categoryName == 'Asteroid'][!is.na(marketGroupID)]$typeID)
sort(c(idlist.marketdata, item.dt[categoryName == 'Asteroid'][!is.na(marketGroupID)]$typeID))
unique(sort(c(idlist.marketdata, item.dt[categoryName == 'Asteroid'][!is.na(marketGroupID)]$typeID)))
idlist.marketdata <- unique(sort(c(idlist.marketdata, item.dt[categoryName == 'Asteroid'][!is.na(marketGroupID)]$typeID)))
cache('idlist.marketdata')
item.dt[grep('Fullerite', typeName)]
item.dt[!is.na(marketGroup)]
item.dt[!is.na(marketGroupID)]
item.dt[!is.na(marketGroupID)][categoryName == 'Asteroid']
unique(item.dt[!is.na(marketGroupID)][categoryName == 'Asteroid']$groupName)
item.dt[typeID %in% idlist.marketdata]
unique(item.dt[typeID %in% idlist.marketdata]$categoryName)
item.dt[typeID %in% idlist.marketdata][categoryName == 'Commodity']
item.dt[categoryName == 'Commodity']
item.dt[!is.na(marketGroupID)]][categoryName == 'Commodity']
item.dt[!is.na(marketGroupID)][categoryName == 'Commodity']
item.dt[typeName == 'Oxygen']
item.dt[typeName == 'Amarr Fuel Block']
get.blueprint.data(4247)
item.dt[get.blueprint.data(4247)]
item.dt[typeID %in% get.blueprint.data(4247)$matTypeID]
item.dt[categoryName == 'Material']
item.dt[!is.na(marketGroupID)][categoryName == 'Material']
item.dt[!is.na(marketGroupID)][categoryName == 'Material'][1:25]
item.dt[!is.na(marketGroupID)][categoryName == 'Material'][26:50]
item.dt[!is.na(marketGroupID)][categoryName == 'Material'][51:75]
item.dt[!is.na(marketGroupID)][categoryName == 'Material'][76:100]
item.dt[!is.na(marketGroupID)][categoryName == 'Material'][101:125]
startup();
lsos()
rm(price.hubs.dt, prices.hubs.dt);
rm(profit.dt)
lsos()
rm(list = ls())
startpu();
startup();
lsos()
prices.hubs.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Dodixie', 'Amarr', 'Jita', 'Rens'))
prices.hubs.dt[system == 'Jita']
item.dt[grep('Fullerite', typeName)]
startup();
prices.gas.dt <- get.evecentral.data(idlist.gas, system = c('Dodixie', 'Jita', 'Rens', 'Amarr'), name.dt = name.dt)
rbind(prices.gas.dt, prices.hubs.dt)
prices.hubs.dt <- rbind(prices.gas.dt, prices.hubs.dt)
tables()
rm(prices.gas.dt)
setkey(prices.hubs.dt, typeID)
item.dt[prices.hubs.dt]
item.dt[prices.hubs.dt][grep('Cloud', groupName)]
item.dt[prices.hubs.dt][grep('Cloud', groupName)][system == 'Jita']
item.dt[grep('Fuel', typeName)]
item.dt[grep('Fuel Block', typeName)]
item.dt[groupName == 'Fuel Block']
startup();
prices.hubs.dt[system == 'Jita'][typeID %in% idlist.buyitems]
prices.hubs.dt[system == 'Jita'][typeID %in% idlist.sellitems]
item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.sellitems]
within(item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.sellitems], { caprica = round(bid * 1.05, 2) })
within(item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.buyitems], { caprica = round(bid * 0.90, 2) })
within(item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.buyitems], { caprica = round(bid * 0.90, 2) })[1:10]
within(item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.buyitems], { caprica = round(bid * 0.90, 2) })[1:30]
within(item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.buyitems], { caprica = round(bid * 0.90, 2) })[order(categoryID, typeID)]
within(item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.buyitems], { caprica = round(bid * 0.90, 2) })[order(categoryID, typeID)][, list(typeID, typeName, caprica)]
item.dt[categoryName == 'Asteroid']
 market.item.dt[categoryName == 'Asteroid']
 market.item.dt[categoryName == 'Asteroid'][1:30]
 market.item.dt[categoryName == 'Asteroid'][groupName != 'Ice']
?grep
 market.item.dt[categoryName == 'Asteroid'][groupName != 'Ice'][grep(' ', typeName, invert = TRUE)]
 market.item.dt[groupname == 'Veldspar']
 market.item.dt[groupName == 'Veldspar']
item.dt[grep('Cloud', groupName)]
item.dt[grep('Harvestable Cloud', groupName)]
market.item.dt[grep('Harvestable Cloud', groupName)]
lsos()
caprica.buy.dt <- within(item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.buyitems], { caprica = round(bid * 0.90, 2) })[order(categoryID, typeID)][, list(typeID, typeName, caprica)]
caprica.sell.dt <- within(item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.sellitems], { caprica = round(bid * 1.05, 2) })[order(categoryID, typeID)][, list(typeID, typeName, caprica)]
caprica.sell.dt
caprica.sell.dt[typeID == 4247]$caprica * 7000
format(caprica.sell.dt[typeID == 4247]$caprica * 7000, big.mark = ',')
40 * 24 * 30
caprica.sell.dt[typeID == 4247]$caprica * 28800
format(caprica.sell.dt[typeID == 4247]$caprica * 28800, big.mark = ',')
caprica.sell.dt
caprica.buy.dt
caprica.sell.dt <- within(item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.sellitems], { caprica = round(bid * 1.05, 2) })[order(categoryID, typeID)][, list(typeID, typeName, groupName, categoryName, caprica)]
caprica.buy.dt <- within(item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.buyitems], { caprica = round(bid * 0.90, 2) })[order(categoryID, typeID)][, list(typeID, typeName, groupName, categoryName, caprica)]
caprica.buy.dt
caprica.sell.dt
caprica.buy.dt
write.csv(caprica.buy.dt, file = '~/Dropbox/EVEOnline/PIPrices/cd_pi_list_20130422.csv', row.names = FALSE)
lsos()
prices.hubs.dt
item.dt[prices.hubs.dt][system == 'Jita']
item.dt[prices.hubs.dt]
item.dt
item.dt[grep('Trimark', typeName)]
calculate.advanced.construction.cost(26302, ME = c(-4, 30), price.dt = prices.hubs.dt[system == 'Jita'])
calculate.advanced.construction.cost(26302, ME = c(-4, 30), price.dt = prices.hubs.dt[system == 'Jita'], verbose = TRUE)
prices.hubs.dt
calculate.advanced.construction.cost(26302, ME = c(-4, 30), price.dt = prices.hubs.dt[system == 'Jita'], verbose = TRUE)
calculate.construction.cost(26302, ME = -4, price.dt = prices.hubs.dt[system == 'Jita'], verbose = TRUE)
calculate.construction.cost(26302, ME = -4, price.dt = prices.hubs.dt[system == 'Jita'], verbose = TRUE)[, sum(requiredCost, na.rm = TRUE)]
calculate.construction.cost(26302, ME = -1, price.dt = prices.hubs.dt[system == 'Jita'], verbose = TRUE)[, sum(requiredCost, na.rm = TRUE)]
lsos()
caprica.buy.dt[typeName == 'Coolant']
caprica.buy.dt[typeName == 'Coolant']$caprica * 2000
caprica.buy.dt[typeName == 'Coolant']$caprica * 2000
caprica.buy.dt[typeName == 'Coolant']$caprica * 2575
prices.hubs.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Dodixie', 'Amarr', 'Jita', 'Rens'))
prices.hubs.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Dodixie', 'Amarr', 'Jita', 'Rens'))
prices.hubs.dt
calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = prices.hubs.dt[system == 'Dodixie'])
item.dt[calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = prices.hubs.dt[system == 'Dodixie'])]
lsos()
caprica.buy.dt[typeName %in% c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water')]
caprica.buy.dt
caprica.buy.dt[typeName %in% c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water')]
caprica.buy.dt[c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water') %in% typeName]
caprica.buy.dt[typeName == 'Liquid Ozone']
prices.hubs.dt[typeName %in% c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water')]
item.dt[prices.hubs.dt][typeName %in% c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water')]
tables()
setkey(prices.hubs.dt, typeID)
item.dt[prices.hubs.dt][typeName %in% c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water')]
item.dt[prices.hubs.dt][system == 'Amarr'][typeName %in% c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water')]
item.dt[prices.hubs.dt][system == 'Amarr'][typeName %in% c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water')]$price
item.dt[prices.hubs.dt][system == 'Amarr'][typeName %in% c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water')]$price %*% c(285000, 10363, 1960000)
item.dt[prices.hubs.dt][system == 'Amarr'][typeName %in% c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water')]$price %*% c(75000, 10363, 200000)
item.dt[prices.hubs.dt][system == 'Amarr'][typeName %in% c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water')]$bid %*% c(75000, 10363, 200000)
item.dt[prices.hubs.dt][system == 'Amarr'][typeName %in% c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water')]$ask %*% c(75000, 10363, 200000)
item.dt[grep('Siege', typeName)]
item.dt[grep('Limited Mega', typeName)]
calculate.construction.cost(3546, ME = 0, price.dt = prices.hubs.dt[system == 'Jita'])
calculate.construction.cost(3546, ME = 0, price.dt = prices.hubs.dt[system == 'Jita'], verbose = TRUE)
calculate.construction.cost(3546, ME = 0, price.dt = prices.hubs.dt[system == 'Jita'], verbose = TRUE)[, sum(requiredCost, na.rm = TRUE)
calculate.construction.cost(3546, ME = 0, price.dt = prices.hubs.dt[system == 'Jita'], verbose = TRUE)[, sum(requiredCost, na.rm = TRUE)]
format(calculate.construction.cost(3546, ME = 0, price.dt = prices.hubs.dt[system == 'Jita'], verbose = TRUE)[, sum(requiredCost, na.rm = TRUE)], big.mark = ',')
caprica.buy.dt[typeName == 'Robotics']
caprica.buy.dt[typeName == 'Robotics']$caprica * 3138
caprica.buy.dt[typeName == 'Arkonor']$caprica * 11600
caprica.buy.dt
caprica.buy.dt[typeName == 'Arkonor']
caprica.sell.dt
caprica.sell.dt[typeID == 4247]$caprica * 12000
format(caprica.sell.dt[typeID == 4247]$caprica * 12000, big.mark = ',')
caprica.buy.dt[typeName == 'Robotics']
item.dt[grep('Drone Control', typeName)]
calculate.construction.cost(24283, ME = 25, price.dt = prices.hubs.dt[system == 'Amarr'])
item.dt[prices.hubs.dt][system == 'Amarr'][typeName %in% c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water')]
item.dt[prices.hubs.dt][system == 'Amarr'][typeName %in% c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water')]$ask
item.dt[prices.hubs.dt][system == 'Amarr'][typeName %in% c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water')]$ask %*% c(0, 0, 240000)
format(item.dt[prices.hubs.dt][system == 'Amarr'][typeName %in% c('Helium Isotopes', 'Liquid Ozone', 'Heavy Water')]$ask %*% c(0, 0, 240000), big.mark = '.')
caprica.buy.dt[typeName == 'Enriched Uranium']
caprica.buy.dt[typeName == 'Enriched Uranium']$caprica * 7868
format(caprica.buy.dt[typeName == 'Enriched Uranium']$caprica * 7868, big.mark = ',')
caprica.buy.dt[typeName == 'Coolant']
caprica.buy.dt[typeName == 'Coolant']$caprica * 2540
caprica.buy.dt[typeName == 'Coolant']$caprica
caprica.sell.dt
caprica.sell.dt[typeID == 4247]
caprica.sell.dt[typeID == 4247]$caprica
caprica.sell.dt[typeID == 4247]$caprica * 28000
format(caprica.sell.dt[typeID == 4247]$caprica * 28000, big.mark = ',')
prices.hubs.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Dodixie', 'Amarr', 'Jita', 'Rens'))
item.dt[typeName == 'Catalyst']
calculate.construction.cost(16240, ME = 30, price.dt = prices.hubs.dt[system == 'Jita'])
item.dt[typeName == 'Heron']
calculate.construction.cost(605, ME = 30, price.dt = prices.hubs.dt[system == 'Jita'])
caprica.sell.dt[typeID == 4247]$caprica * 28000
format(caprica.sell.dt[typeID == 4247]$caprica * 28000, big.mark = ',')
item.dt[grep('Trimark', typeName)]
item.dt[grep('Trimark', typeName)][groupName == 'Rig Armor']
item.dt[grep('Trimark.* I$', typeName)][groupName == 'Rig Armor']
calculate.construction.cost(item.dt[grep('Trimark.* I$', typeName)][groupName == 'Rig Armor'], ME = 100, price.dt = prices.hubs.dt[system == 'Dodixie'])
prices.hubs.dt
calculate.construction.cost(item.dt[grep('Trimark.* I$', typeName)][groupName == 'Rig Armor']$typeID, ME = 100, price.dt = prices.hubs.dt[system == 'Dodixie'])
caprica.buy.dt[typeName == 'Oxygen']
caprica.buy.dt[typeName == 'Oxygen']$2000
caprica.buy.dt[typeName == 'Oxygen']$caprica * 2000
caprica.buy.dt[typeName == 'Helium Isotopes']
caprica.buy.dt[grep('Helium', typeName)]
prices.hubs.dt[grep('Helium', typeName)]
prices.hubs.dt
caprica.buy.dt
caprica.buy.dt[categoryName == 'Ice Products']
caprica.buy.dt[grep('Ice', typeName)]
caprica.buy.dt[grep('Ice', categoryName)]
caprica.buy.dt[grep('Ice', groupName)]
prices.hubs.dt[grep('Helium', typeName)]
prices.hubs.dt[grep('Helium', groupName)]
item.dt[typeID %in% idlist.marketdata]
item.dt[typeID %in% idlist.marketdata][grep('Helium', typeName)]
prices.hubs.dt[typeID == 16274]
caprica.buy.dt[typeID == 16274]
prices.hubs.dt[typeID == 16274][system == 'Amarr']
prices.hubs.dt[typeID == 16274][system == 'Amarr']$bid * 360000
format(prices.hubs.dt[typeID == 16274][system == 'Amarr']$bid * 360000, big.mark = ',')
caprica.buy.dt[typeName == 'Coolant']
caprica.buy.dt[typeName == 'Coolant']$caprica * 1940
format(caprica.buy.dt[typeName == 'Coolant']$caprica * 1940, big.mark = ',')
format(caprica.buy.dt[typeName == 'Mechanical Parts']$caprica * 1200, big.mark = ',')
format(caprica.sell.dt[typeName == 'Amarr Fuel Block']$caprica * 2400, big.mark = ',')
format(caprica.sell.dt[typeName == 'Amarr Fuel Block']$caprica * 14000, big.mark = ',')
item.dt[grep('Caracal', typeName)]
calculate.construction.cost(621, ME = 20, price.dt = prices.hubs.dt[system == 'Jita'])
calculate.construction.cost(621, ME = 30, price.dt = prices.hubs.dt[system == 'Jita'])
caprica.sell.dt
caprica.sell.dt$caprica[3]
caprica.sell.dt$caprica[3] * 7000
format(caprica.sell.dt$caprica[3] * 7000, big.mark = ',')
prices.hubs.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Dodixie', 'Amarr', 'Jita', 'Rens'))
prices.hubs.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Dodixie', 'Amarr', 'Jita', 'Rens'))
prices.hubs.dt
setkey(prices.hubs.dt, typeID)
item.dt[prices.hubs.dt]
calculate.construction.cost(630, ME = 30, price.dt = prices.hubs.dt[system == 'Dodixie'])
calculate.construction.cost(630, ME = 30, price.dt = prices.hubs.dt[system == 'Dodixie'], verbose = TRUE)
calculate.construction.cost(632, ME = 30, price.dt = prices.hubs.dt[system == 'Dodixie'], verbose = TRUE)
calculate.construction.cost(680, ME = 30, price.dt = prices.hubs.dt[system == 'Dodixie'], verbose = TRUE)
item.dt[typeName == 'Catalyst']
calculate.construction.cost(16240, ME = 30, price.dt = prices.hubs.dt[system == 'Dodixie'], verbose = TRUE)
calculate.construction.cost(16240, ME = 30, price.dt = prices.hubs.dt[system == 'Dodixie'], verbose = FALSE)
242 / 5
calculate.construction.cost(16240, ME = 48, price.dt = prices.hubs.dt[system == 'Dodixie'], verbose = FALSE)
calculate.construction.cost(16240, ME = 48, price.dt = prices.hubs.dt[system == 'Dodixie'], verbose = TRUE)
calculate.construction.cost(16240, ME = 47, price.dt = prices.hubs.dt[system == 'Dodixie'], verbose = TRUE)
calculate.construction.cost(16240, ME = 48, price.dt = prices.hubs.dt[system == 'Dodixie'], verbose = TRUE)
profit.dt <- calculate.construction.profit(construction.ships, ME = 30, price.dt = prices.hubs.dt[system == 'Dodixie'])
profit.dt <- calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = prices.hubs.dt[system == 'Dodixie'])
profit.dt
profit.dt[margin > 1]
load_all('../evecalc'); profit.dt <- calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = prices.hubs.dt[system == 'Dodixie'])
profit.dt
prices.hubs.dt[system = 'Jita']
prices.hubs.dt[system == 'Jita']
item.dt[prices.hubs.dt][system == 'Jita']
item.dt[prices.hubs.dt][system == 'Jita'][, list(typeID, typeName, price = buy * 0.9)]
lsos()
item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, typeName, price = buy * 0.9)]
item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, typeName, price = bid * 0.9)]
item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, typeName, groupName, categoryName, price = bid * 0.9)]
write.csv(item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, typeName, groupName, categoryName, price = bid * 0.9)], row.names = FALSE, file = '~/Dropbox/EVEOnline/PIPrices/cd_pi_list_20130429.csv')
caprica.buy.dt <- item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, typeName, groupName, categoryName, price = bid * 0.9)];
caprica.sell.dt <- item.dt[prices.hubs.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, typeName, groupName, categoryName, price = bid * 1.05)];
caprica.sell.dt
caprica.buy.dt[typeName == 'Coolant']
caprica.buy.dt[typeName == 'Coolant']$price * 1800
format(caprica.buy.dt[typeName == 'Coolant']$price * 1800, big.mark = ',')
format(caprica.buy.dt[typeName == 'Mechanical Parts']$price * 915, big.mark = ',')
item.dt[typeName == 'Archon']
calculate.advanced.construction.cost(23757, ME = c(3, 40), price.dt = prices.hubs.dt[system == 'Jita'])
calculate.advanced.construction.cost
q()
y
q()
q()
caprica.buy.dt
prices.hubs.dt
lsos()
q()
q()
dev_mode(TRUE); load_all('../evecalc/'); startup();
startup();
startup();
prices.hubs.20130529.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Dodixie', 'Amarr', 'Jita', 'Rens')); save(prices.hubs.20130529.dt, file = 'data/noautoload/prices.hubs.20130529.rda', compress = 'xz');
caprica.sell.dt <- item.dt[prices.hubs.20130529.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, typeName, groupName, categoryName, price = bid * 1.05)];
caprica.buy.dt  <- item.dt[prices.hubs.20130529.dt][system == 'Jita'][typeID %in% idlist.buyitems ][, list(typeID, typeName, groupName, categoryName, price = round(bid * 0.9, 0))];
caprica.sell.dt <- item.dt[prices.hubs.20130529.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
caprica.buy.dt  <- item.dt[prices.hubs.20130529.dt][system == 'Jita'][typeID %in% idlist.buyitems ][, list(typeID, typeName, groupName, categoryName, price = round(bid * 0.9, 2))];
caprica.buy.dt
lsos()
q()
dev_mode(TRUE); load_all('../evecalc'); startup();
caprica.buy.dt
caprica.buy.dt[grep('Fullerite', typeName)]
caprica.buy.dt[grep('Fullerite', typeName)][order(typeName)]
caprica.buy.dt[grep('Fullerite', typeName)][order(typeName)]$price %*% c(1000, 2600, 232, 6000, 436, 4560, 1520, 700, 120)
cbind(caprica.buy.dt[grep('Fullerite', typeName)][order(typeName)]$price, amount = c(1000, 2600, 232, 6000, 436, 4560, 1520, 700, 120))
cbind(caprica.buy.dt[grep('Fullerite', typeName)][order(typeName)], amount = c(1000, 2600, 232, 6000, 436, 4560, 1520, 700, 120))
cbind(caprica.buy.dt[grep('Fullerite', typeName)][order(typeName)], amount = c(1000, 2600, 232, 6000, 436, 4560, 1520, 700, 120))[, price * amount]
cbind(caprica.buy.dt[grep('Fullerite', typeName)][order(typeName)], amount = c(1000, 2600, 232, 6000, 436, 4560, 1520, 700, 120))[, sum(price * amount)]
format(cbind(caprica.buy.dt[grep('Fullerite', typeName)][order(typeName)], amount = c(1000, 2600, 232, 6000, 436, 4560, 1520, 700, 120))[, sum(price * amount)], big.mark = ',')
prices.hubs.20130603.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Dodixie', 'Rens', 'Amarr', 'Jita'))
caprica.buy.dt  <- item.dt[prices.hubs.20130603.dt][system == 'Jita'][typeID %in% idlist.buyitems ][, list(typeID, typeName, groupName, categoryName, price = round(bid * 0.9, 2))];
caprica.buy.dt
format(cbind(caprica.buy.dt[grep('Fullerite', typeName)][order(typeName)], amount = c(1000, 2600, 232, 6000, 436, 4560, 1520, 700, 120))[, sum(price * amount)], big.mark = ',')
cbind(caprica.buy.dt[grep('Fullerite', typeName)][order(typeName)], amount = c(1000, 2600, 232, 6000, 436, 4560, 1520, 700, 120))
prices.hubs.20130604.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Dodixie', 'Rens', 'Amarr', 'Jita'))
prices.hubs.20130604.dt
item.dt[prices.hubs.20130604.dt]
item.dt[prices.hubs.20130604.dt][system == 'Dodixie']
caprica.buy.dt[typeName %in% c('Coolant', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Mechanical Parts', 'Robotics')]
caprica.buy.dt[typeName %in% c('Coolant', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Mechanical Parts', 'Robotics')][order(typeName)]
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Mechanical Parts', 'Robotics')][order(typeName)], amount = c(5900, 96, 1500, 590, 1750, 5, 1338))
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Mechanical Parts', 'Robotics')][order(typeName)], amount = c(5900, 96, 1500, 590, 1750, 5, 1338))[, sum(price * amount)]
format(cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Mechanical Parts', 'Robotics')][order(typeName)], amount = c(5900, 96, 1500, 590, 1750, 5, 1338))[, sum(price * amount)], big.mark = ',')
7396.93 * 5900
item.dt[grep('X-Large', typeName)]
item.dt[grep('X-Large', typeName), useBytes = FALSE]
item.dt[grep('X-Large', typeName, useBytes = TRUE)]
item.dt[grep('Hangar', typeName, useBytes = TRUE)]
q()
y
dev_mode(TRUE);
load('../evecalc/');
dev_mode(TRUE); load_all('../evecalc/'); startup();
caprica.buy.dt
caprica.buy.dt[typeName == 'Coolant']
caprica.buy.dt[typeName == 'Coolant']$price
caprica.buy.dt[typeName == 'Coolant']$price * 3000
q()
dev_mode(TRUE); load_all('../evecalc'); startup();
prices.hubs.20130609.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Dodixie', 'Rens', 'Amarr', 'Jita'))
caprica.buy.dt[typeName %in% c('Coolant', 'Robotics', 'Mechanical Parts', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Sleeper Data Library', 'Defective Current Pump', 'Tripped Power Circuit')]
caprica.buy.dt[typeName %in% c('Coolant', 'Robotics', 'Mechanical Parts', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Sleeper Data Library', 'Defective Current Pump', 'Tripped Power Circuit')][order(typeName)]
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Robotics', 'Mechanical Parts', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Sleeper Data Library', 'Defective Current Pump', 'Tripped Power Circuit')][order(typeName)], amount = c(4730, 4, 96, 1500, 590, 1750, 5, 2451, 5))
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Robotics', 'Mechanical Parts', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Sleeper Data Library', 'Defective Current Pump', 'Tripped Power Circuit')][order(typeName)], amount = c(4730, 4, 96, 1500, 590, 1750, 5, 2451, 5))[, sum(amount * price)]
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Robotics', 'Mechanical Parts', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Sleeper Data Library', 'Defective Current Pump', 'Tripped Power Circuit')][order(typeName)], amount = c(4730, 4, 96, 1500, 590, 1750, 5, 2451, 5))
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Robotics', 'Mechanical Parts', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Sleeper Data Library', 'Defective Current Pump', 'Tripped Power Circuit')][order(typeName)], amount = c(4730, 4, 96, 1500, 590, 1750, 5, 2451, 5))[, list(typeID, typeName, cost = price * amount)]]
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Robotics', 'Mechanical Parts', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Sleeper Data Library', 'Defective Current Pump', 'Tripped Power Circuit')][order(typeName)], amount = c(4730, 4, 96, 1500, 590, 1750, 5, 2451, 5))[, list(typeID, typeName, cost = price * amount)]]
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Robotics', 'Mechanical Parts', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Sleeper Data Library', 'Defective Current Pump', 'Tripped Power Circuit')][order(typeName)], amount = c(4730, 4, 96, 1500, 590, 1750, 5, 2451, 5))[, list(typeID, typeName, cost = price * amount)]
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Robotics', 'Mechanical Parts', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Sleeper Data Library', 'Defective Current Pump', 'Tripped Power Circuit')][order(typeName)], amount = c(4730, 4, 96, 1500, 590, 1750, 5, 2451, 5))[, list(typeID, typeName, cost = format(price * amount, big.mark = ',')]
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Robotics', 'Mechanical Parts', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Sleeper Data Library', 'Defective Current Pump', 'Tripped Power Circuit')][order(typeName)], amount = c(4730, 4, 96, 1500, 590, 1750, 5, 2451, 5))[, list(typeID, typeName, cost = format(price * amount, big.mark = ','))]
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Robotics', 'Mechanical Parts', 'Fullerite-C320', 'Fullerite-C50', 'Fullerite-C540', 'Fullerite-C84', 'Sleeper Data Library', 'Defective Current Pump', 'Tripped Power Circuit')][order(typeName)], amount = c(4730, 4, 96, 1500, 590, 1750, 5, 2451, 5))[, list(typeID, typeName, price, amount, cost = format(price * amount, big.mark = ','))]
item.dt[grep('Manticore', typeName)]
calculate.advanced.construction.cost(12032, ME = c(-4, 30), price.dt = prices.hubs.20130609.dt[system == 'Dodixie'])
calculate.advanced.construction.cost(12032, ME = c(-4, 30), price.dt = prices.hubs.20130609.dt[system == 'Dodixie'], verbose = TRUE)
calculate.advanced.construction.cost(12032, ME = c(-4, 30), price.dt = prices.hubs.20130609.dt[system == 'Dodixie'])
format(calculate.advanced.construction.cost(12032, ME = c(-4, 30), price.dt = prices.hubs.20130609.dt[system == 'Dodixie'])$cost, big.mark = ',')
calculate.construction.cost(12032, ME = c(-4, 30), price.dt = prices.hubs.20130609.dt[system == 'Dodixie'])
calculate.construction.cost(12032, ME = c(-4, 30), price.dt = prices.hubs.20130609.dt[system == 'Dodixie'], verbose = TRUE)
calculate.construction.cost(12032, ME = -4, price.dt = prices.hubs.20130609.dt[system == 'Dodixie'], verbose = TRUE)
lsos()
save(prices.hubs.20130603.dt, file = 'data/noautoload/prices.hubs.20130603.rda', compress = 'xz')
save(prices.hubs.20130604.dt, file = 'data/noautoload/prices.hubs.20130604.rda', compress = 'xz')
save(prices.hubs.20130609.dt, file = 'data/noautoload/prices.hubs.20130609.rda', compress = 'xz')
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup();
lsos()
git status
lsos()
calculate.advanced.construction.cost(12032, ME = c(-4, 30), price.dt = prices.hubs.20130609.dt[system == 'Dodixie'])
12032
get.blueprint.data(12032)
get.blueprint.data(12032)$matTypeID
get.blueprint.data(get.blueprint.data(12032)$matTypeID)
get.blueprint.data(12032)
t1.dt <- get.blueprint.data(12032)
t2.dt
t1.dt
t2.dt <- get.blueprint.data(get.blueprint.data(12032)$matTypeID)
t2.dt
t1.dt[, mergeID := matTypeID]
t2.dt[, mergeID := typeID]
t1.dt
t2.dt
t1.dt[t2.dt]
tables()
merge(t1.dt, t2.dt, by = mergeID)
merge(t1.dt, t2.dt, by = "mergeID")
t1.dt
item.dt[grep('X-Large Ship', typeName)]
calculate.construction.cost(24646, ME = 0, price.dt = prices.hubs.20130609.dt[system == 'Jita'])
calculate.construction.cost(24646, ME = 0, price.dt = prices.hubs.20130609.dt[system == 'Jita'], verbose = TRUE)
calculate.advanced.construction.cost(24646, ME = c(0, 30), price.dt = prices.hubs.20130609.dt[system == 'Jita'], verbose = TRUE)
calculate.advanced.construction.cost(24646, ME = c(0, 30), price.dt = prices.hubs.20130609.dt[system == 'Jita'])
calculate.advanced.construction.cost(24646, ME = c(0, 30), price.dt = prices.hubs.20130609.dt[system == 'Jita'], verbose = TRUE)
calculate.advanced.construction.cost(24646, ME = c(0, 30), price.dt = prices.hubs.20130609.dt[system == 'Jita'], verbose = TRUE)[, sum(quantity * price)]
format(calculate.advanced.construction.cost(24646, ME = c(0, 30), price.dt = prices.hubs.20130609.dt[system == 'Jita'], verbose = TRUE)[, sum(quantity * price)], big.mark = ',')
q()
y
lsos()
prices.hubs.
prices.hubs.dt
dev_mode(TRUE); load_all('../evecalc'); startup();
dev_mode(TRUE); startup();
lsos()
prices.hubs.dt
rm(prices.hubs.dt)
q()
startup();
lsos()
q()
getwd()
dev_mode(TRUE); load_all('../evecalc/'); startup();
dev_mode(TRUE); load_all('../evecalc/'); startup();
dev_mode(TRUE); load_all('../evecalc/'); startup();
traceback()
dev_mode(TRUE); load_all('../evecalc/'); startup();
dev_mode(TRUE); load_all('../evecalc/'); startup();
dev_mode(TRUE); load_all('../evecalc/'); startup();
prices.hubs.20130612.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Dodixie', 'Rens'))
prices.hubs.20130612.dt
item.dt[prices.hubs.20130612.dt]
item.dt[prices.hubs.20130612.dt][system == 'Jita']
caprica.buy.dt  <- item.dt[prices.hubs.20130612.dt][system == 'Jita'][typeID %in% idlist.buyitems ][, list(typeID, typeName, groupName, categoryName, price = round(bid * 0.9, 2))];
caprica.buy.dt
caprica.buy.dt[grep('Datacore', typeName)]
item.dt[grep('Datacore', typeName)]
market.item.dt
market.item.dt[grep('Datacore', typeName)]
prices.hubs.20130612.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Dodixie', 'Rens'))
item.dt[grep('Scan', typeName)]
item.dt[grep('Scan ', typeName)]
calculate.advanced.construction.cost(33197, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Dodixie'], verbose = TRUE)
calculate.advanced.construction.cost
calculate.advanced.construction.cost(33197, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Dodixie'], verbose = TRUE)
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(33197, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Dodixie'], verbose = TRUE)
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(33197, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Dodixie'], verbose = TRUE)
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(33197, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Dodixie'], verbose = TRUE)
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(33197, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Dodixie'], verbose = TRUE)
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(33197, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Dodixie'], verbose = TRUE)
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(33197, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Dodixie'])
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(33197, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Dodixie'], verbose = TRUE)
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(33197, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Dodixie'], verbose = TRUE)[, sum(quantity * price)]
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(33197, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Dodixie'], verbose = TRUE)
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(33197, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Dodixie'], verbose = TRUE)[, list(quantity = sum(quantity), price = price[1]), by = list(typeID, typeName)]
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(33197, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Dodixie'], verbose = TRUE)[, c(5:8), with = FALSE][, list(quantity = sum(quantity), price = price[1]), by = list(typeID, typeName)]
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(33197, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Jita'], verbose = TRUE)[, c(5:8), with = FALSE][, list(quantity = sum(quantity), price = price[1]), by = list(typeID, typeName)]
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(33197, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Jita'], verbose = TRUE)[, c(5:8), with = FALSE][, list(quantity = sum(quantity), price = price[1]), by = list(typeID, typeName)][, sum(quantity * price)]
item.dt[grep('Buzzard', typeName)]
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(11192, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Dodixie'], verbose = TRUE)[, list(quantity = sum(quantity), price = price[1]), by = list(typeID, typeName)]
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(11192, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Jita'], verbose = TRUE)[, c(5:8), with = FALSE][, list(quantity = sum(quantity), price = price[1]), by = list(typeID, typeName)][, sum(quantity * price)]
startup(); load_all('../evecalc'); calculate.advanced.construction.cost(11192, ME = c(-4, 20), price.dt = prices.hubs.20130612.dt[system == 'Jita'])
prices.hubs.20130612.dt
item.dt[prices.hubs.20130612.dt]
item.dt[prices.hubs.20130612.dt][grep('Process', typeName)]
item.dt[prices.hubs.20130612.dt][grep(' Process', typeName)]
item.dt[grep('Process', typeName)]
item.dt[categoryName == 'Decryptors']
item.dt[grep('Decrypt', groupName)]
startup();
startup(); load_all('../evecalc'); startup();
prices.hubs.20130613.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Dodixie', 'Rens'))
item.dt[prices.hubs.20130613.dt][grep('Process', typeName)]
item.dt[prices.hubs.20130613.dt][grep('Incognito', typeName)]
idlist.marketdata
item.dt[typeID %in% idlist.marketdata]
item.dt[typeID %in% idlist.marketdata][grep('Incognito', typeName)]
idlist.decryptor
idlist.marketdata[grep('Decryptor', typeName)]
idlist.marketdata[grep('Decrypt', typeName)]
market.item.dt[grep('Decrypt', typeName)]
market.item.dt[grep('Decrypt', groupName)]
startup();
idlist.marketdata
prices.hubs.20130613.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Dodixie', 'Rens'))
market.item.dt[grep('Decrypt', groupName)]
item.dt[prices.hubs.20130613.dt]
item.dt[prices.hubs.20130613.dt][grep('Process', typeName)]
item.dt[prices.hubs.20130613.dt][grep(' Process$', typeName)]
item.dt[prices.hubs.20130613.dt][grep('Incognito Process$', typeName)]
item.dt[prices.hubs.20130613.dt][grep('Esoteric Process$', typeName)]
lsos()
dir('data/noautoload')
lsos()
save(prices.hubs.20130612.dt, file = 'data/noautoload/prices.hubs.20130612.rda', compress = 'xz')
save(prices.hubs.20130613.dt, file = 'data/noautoload/prices.hubs.20130613.rda', compress = 'xz')
lsos()
rm(prices.hubs.20130529.dt)
lsos()
bpcost
calculate.advanced.construction.cost(20189, ME = (2, 30), price.dt = prices.hubs.20130613.dt[system == 'Dodixie'])
calculate.advanced.construction.cost(20189, ME = c(2, 30), price.dt = prices.hubs.20130613.dt[system == 'Dodixie'])
format(calculate.advanced.construction.cost(20189, ME = c(2, 30), price.dt = prices.hubs.20130613.dt[system == 'Dodixie']), big.mark = ',')
format(calculate.advanced.construction.cost(20189, ME = c(2, 30), price.dt = prices.hubs.20130613.dt[system == 'Dodixie'])$cost, big.mark = ',')
format(calculate.advanced.construction.cost(20189, ME = c(2, 30), price.dt = prices.hubs.20130613.dt[system == 'Dodixie'])$cost, big.mark = ',', verbose = TRUE)
calculate.advanced.construction.cost(20189, ME = c(2, 30), price.dt = prices.hubs.20130613.dt[system == 'Dodixie'], verbose = TRUE)
startup(); prices.hubs.20130614.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Dodixie', 'Rens'))
item.dt[grep('Guardian', typeName)]
item.dt[grep('Guardian', typeName)][categoryName == 'Ship']
calculate.advanced.construction.cost(11987, ME = c(-4, 30), price.dt = prices.hubs.20130614.dt[system == 'Dodixie'])
format(calculate.advanced.construction.cost(11987, ME = c(-4, 30), price.dt = prices.hubs.20130614.dt[system == 'Dodixie'])$price, big.mark = ',')
calculate.advanced.construction.cost(11987, ME = c(-4, 30), price.dt = prices.hubs.20130614.dt[system == 'Dodixie'])
format(calculate.advanced.construction.cost(11987, ME = c(-4, 30), price.dt = prices.hubs.20130614.dt[system == 'Dodixie'])$cost, big.mark = ',')
prices.hubs.20130614.dt
item.dt[grep('Amarr Starship', typeName)]
item.dt[grep('Amarr', typeName)]
item.dt[grep('Engineering', typeName)]
item.dt[grep('Engineering', typeName)][categoryName = 'Implant']
item.dt[grep('Engineering', typeName)][categoryName = 'Commodities']
item.dt[grep('Engineering', typeName)][categoryName = 'Commodity']
item.dt[typeID %in% idlist.datacore]
prices.hubs.20130614.dt[typeID %in% idlist.datacore]
item.dt[prices.hubs.20130614.dt][typeID %in% idlist.datacore]
item.dt[prices.hubs.20130614.dt][typeID %in% idlist.datacore][grep('Engineering', typeName)]
item.dt[prices.hubs.20130614.dt][typeID %in% idlist.datacore][grep('Engineering', typeName)][system == 'Dodixie']
item.dt[prices.hubs.20130614.dt][typeID %in% idlist.datacore][grep('Engineering', typeName)][system == 'Dodixie'][grep('(Amarr|Mechanical)', typeName)]
item.dt[prices.hubs.20130614.dt][typeID %in% idlist.datacore][grep('Engineering', typeName)][system == 'Dodixie'][grep('(Amarr|Mechanical)', typeName)]
item.dt[prices.hubs.20130614.dt][typeID %in% idlist.datacore][grep('Engineering', typeName)][system == 'Dodixie'][grep('(Amarr|Mechanical)', typeName)]$price
item.dt[prices.hubs.20130614.dt][typeID %in% idlist.datacore][grep('Engineering', typeName)][system == 'Dodixie'][grep('(Amarr|Mechanical)', typeName)]$price * 8
sum(item.dt[prices.hubs.20130614.dt][typeID %in% idlist.datacore][grep('Engineering', typeName)][system == 'Dodixie'][grep('(Amarr|Mechanical)', typeName)]$price * 8)
sum(item.dt[prices.hubs.20130614.dt][typeID %in% idlist.datacore][grep('Engineering', typeName)][system == 'Dodixie'][grep('(Amarr|Mechanical)', typeName)]$price * 8) / 0.3
format(calculate.advanced.construction.cost(11987, ME = c(-4, 30), price.dt = prices.hubs.20130614.dt[system == 'Dodixie'])$cost, big.mark = ',')
format(calculate.advanced.construction.cost(11987, ME = c(-1, 30), price.dt = prices.hubs.20130614.dt[system == 'Dodixie'])$cost, big.mark = ',')
(sum(item.dt[prices.hubs.20130614.dt][typeID %in% idlist.datacore][grep('Engineering', typeName)][system == 'Dodixie'][grep('(Amarr|Mechanical)', typeName)]$price * 8) + 2) / 0.33
item.dt[grep('Noctis', typeName)]
calculate.construction.cost(2998, ME = 30, price.dt = prices.hubs.20130614.dt[system == 'Jita'])
calculate.construction.cost(2998, ME = 100, price.dt = prices.hubs.20130614.dt[system == 'Jita'])
lsos()
dir('data/noautoload/')
dir('data/noautoload/', pattern = '\.rda')
dir('data/noautoload/', pattern = 'a\.rda')
dir('data/noautoload/', pattern = '\\.rda')
save(prices.hubs.20130614.dt, file = 'data/noautoload/prices.hubs.20130614.rda', compress = 'xz')
startup(); prices.hubs.20130617.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Dodixie', 'Rens'))
prices.hubs.2013061
prices.hubs.20130617.dt
use.prices.dt <- prices.hubs.20130617.dt; caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems ][, list(typeID, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
caprica.buy.dt
caprica.buy.dt
load('~/Dropbox/Temp/darz.rda')
darz.dt
merge(caprica.buy.dt, darz.dt[, list(typeName = item, amount)], by = 'typeName')
merge(caprica.buy.dt, darz.dt[, list(typeName = item, amount)], by = 'typeName', all.x = TRUE)
merge(caprica.buy.dt, darz.dt[, list(typeName = item, amount)], by = 'typeName', all.y = TRUE)
write.csv(darz.dt, file = '~/Dropbox/Temp/darz.csv')
item.dt[grep('Aux', typeName)]
merge(caprica.buy.dt, darz.dt[, list(typeName = item, amount)], by = 'typeName', all.y = TRUE)
write.csv(darz.dt, file = '~/Dropbox/Temp/darz.csv', row.name = FALSE)
write.csv(darz.dt, file = '~/Dropbox/Temp/darz.csv', row.names = FALSE)
names(darz.dt)
names(darz.dt)[1] <- 'typeName';
setnames(darz.dt, c('typeName', 'amount'))
darz.dt
darz.dt$typeName
write.csv(darz.dt, file = '~/Dropbox/Temp/darz.csv', row.names = FALSE)
item.dt[grep('Hybrid ', typeName)]
item.dt[grep('Hybrid Tech', typeName)]
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)
item.dt[grep('Parts', typeName)]
item.dt[grep('Hybrid Tech', typeName)]
length(item.dt[!is.na(marketGroupID)])
length(item.dt[!is.na(marketGroupID)]$typeName)
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[, sum(amount * price, na.rm = TRUE)]
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[, sum(amount * price, na.rm = TRUE)]
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[!is.na(price)][, sum(amount * price, na.rm = TRUE)]
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[!is.na(price)]
darz.dt
str(darz.dt)
darz.dt[, amount := as.numeric(amount)]
darz.dt
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[!is.na(price)]
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[!is.na(price)][, sum(amount * price, na.rm = TRUE)]
format(merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[!is.na(price)][, sum(amount * price, na.rm = TRUE)], big.mark = ',')
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[!is.na(price)][, sum(amount * price, na.rm = TRUE)]
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)
merge(darz.dt, item.dt, by = 'typeName', all.x = TRUE)
startup();
startup(); prices.hubs.20130617.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Dodixie', 'Rens'))
use.prices.dt <- prices.hubs.20130617.dt; caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems ][, list(typeID, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
merge(darz.dt, item.dt, by = 'typeName', all.x = TRUE)
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)
item.dt[typeID %in% idlist.marketdata]
item.dt[typeName == 'Auxiliary Parts']
idlist.marketdata[idlist.marketdata == 23159]
startup();
idlist.marketdata[idlist.marketdata == 23159]
idlist.marketdata[idlist.marketdata == "23159"]
rm(idlist.marketdata)
startup();
idlist.marketdata[idlist.marketdata == "23159"]
idlist.marketdata[idlist.marketdata == 23159]
idlist.commodity
startup();
idlist.marketdata[idlist.marketdata == 23159]
use.prices.dt <- prices.hubs.20130617.dt; caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems ][, list(typeID, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
idlist.marketdata[idlist.marketdata == 23159]
merge(darz.dt, item.dt, by = 'typeName', all.x = TRUE)
merge(darz.dt, item.dt, by = 'typeName', all.x = TRUE)[, sum(amount * price)]
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[, sum(amount * price)]
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)
use.prices.dt <- prices.hubs.20130617.dt; caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems ][, list(typeID, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)
idlist.marketdata[idlist.marketdata == 23159]
caprica.buy.dt[typeID == 23159]
idlist.buyitems[typeID == 23159]
idlist.buyitems[idlist.buyitems == 23159]
merge(darz.dt, item.dt, by = 'typeName', all.x = TRUE)
idlist.buyitems[idlist.buyitems == 23159]
caprica.buy.dt[typeID == 23159]
caprica.buy.dt
use.prices.dt <- prices.hubs.20130617.dt; caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
caprica.buy.dt[typeID == 23159]
prices.hubs.20130617.dt[typeID == 23159]
idlist.marketdata[idlist.marketdata == 23159]
startup(); prices.hubs.20130617.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Dodixie', 'Rens'))
idlist.marketdata[idlist.marketdata == 23159]
prices.hubs.20130617.dt[typeID == 23159]
use.prices.dt <- prices.hubs.20130617.dt; caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
merge(darz.dt, item.dt, by = 'typeName', all.x = TRUE)
merge(darz.dt, item.dt, by = 'typeName', all.x = TRUE)[, sum(amount * price)]
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[, sum(amount * price)]
format(merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[, sum(amount * price)], big.mark = ',')
caprica.buy.dt
caprica.buy.dt[typeName %in% c('Coolant', 'Mechanical Parts', 'Robotics')]
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Mechanical Parts', 'Robotics')], amount = c(505, 4971, 1134))
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Mechanical Parts', 'Robotics')], amount = c(505, 4971, 1134))[, sum(price * amount)]
format(cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Mechanical Parts', 'Robotics')], amount = c(505, 4971, 1134))[, sum(price * amount)], big.mark = ',')
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Mechanical Parts', 'Robotics')], amount = c(505, 4971, 1134))
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Mechanical Parts', 'Robotics')], amount = c(505, 4971, 1134))[, list(typeID, typeName, amount, price, cost = amount * price)]
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Mechanical Parts')], amount = c(5775, 6545))[, list(typeID, typeName, amount, price, cost = amount * price)]
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Mechanical Parts')], amount = c(5775, 6545))[, list(typeID, typeName, amount, price, cost = amount * price)][, sum(cost)]
format(cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Mechanical Parts')], amount = c(5775, 6545))[, list(typeID, typeName, amount, price, cost = amount * price)][, sum(cost)], big.mark = ',')
darz.dt <- data.table(read.csv('~/Dropbox/Temp/darz.csv'))
darz.dt
format(merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[, sum(amount * price)], big.mark = ',')
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)
cbind(merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE), cost = amount * price)
cbind(merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE), cost = amount * price)
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)
str(merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE))
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)
merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[, list(typeID, typeName, amount, price, cost = amount * price)]
format(merge(darz.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[, sum(amount * price)], big.mark = ',')
lsos()
item.dt[grep('Thanatos', typeName)]
calculate.advanced.construction.cost(23911, ME = c(10, 30), price.dt = prices.hubs.2013061
calculate.advanced.construction.cost(23911, ME = c(10, 30), price.dt = prices.hubs.20130617.dt[system == 'Jita'])
format(calculate.advanced.construction.cost(23911, ME = c(10, 30), price.dt = prices.hubs.20130617.dt[system == 'Jita'])$cost, big.mark = ',')
gc()
caprica.se.dt
caprica.buy.dt
caprica.sell.dt
caprica.sell.dt$price[3]
caprica.sell.dt$price[3] * 28000
dev_mode(TRUE); load_all('../evecalc/'); startup();
caprica.buy.dt
caprica.buy.dt[typeName %in% c('Construction Blocks', 'Coolant', 'Enriched Uranium', 'Mechanical Parts')]
cbind(caprica.buy.dt[typeName %in% c('Construction Blocks', 'Coolant', 'Enriched Uranium', 'Mechanical Parts')], amount = c(3645, 7950, 3215, 1175))
cbind(caprica.buy.dt[typeName %in% c('Construction Blocks', 'Coolant', 'Enriched Uranium', 'Mechanical Parts')], amount = c(3645, 7950, 3215, 1175))[, sum(price * amount)]
format(cbind(caprica.buy.dt[typeName %in% c('Construction Blocks', 'Coolant', 'Enriched Uranium', 'Mechanical Parts')], amount = c(3645, 7950, 3215, 1175))[, sum(price * amount)], big.mark = ',')
format(cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Mechanical Parts')], amount = c(3725, 1120))[, sum(price * amount)], big.mark = ',')
cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Mechanical Parts')], amount = c(3725, 1120))
format(cbind(caprica.buy.dt[typeName %in% c('Coolant', 'Mechanical Parts')], amount = c(3725, 1120))[, sum(price * amount)], big.mark = ',')
item.dt[grep('X-Large Ship', typeName)]
calculate.construction.cost(23646, ME = 0, price.dt = prices.hubs.201306
lsos()
load('data/noautoload/prices.hubs.20130614.rda')
lsos()
caprica.buy.dt
dir('data/noautoload')
lsos()
caprica.buy.dt
lsos()
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup();
lsos()
caprica.buy.dt
kai.dt <- data.table(read.csv('~/Dropbox/Temp/kai.csv'))
kai.dt
merge(caprica.buy.dt, kai.dt, by = 'typeName')
merge(kai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)
item.dt[typeName == 'Sleeper Data Library']
prices.hubs.20130614.dt
item.dt[prices.hubs.20130614.dt]
item.dt[prices.hubs.20130614.dt][typeName == 'Sleeper Data Library']
idlist.commodity
lsos()
startup();
prices.hubs.20130623.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie'))
prices.hubs.20130623.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie'))
use.prices.dt <- prices.hubs.20130623.dt; caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
lsos()
save(prices.hubs.20130623.dt, file = 'data/noautoload/prices.hubs.20130623.rda', compress = 'xz')
merge(kai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)
within(merge(kai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE), { cost = amount * price })
within(merge(kai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE), { cost = amount * price })[order(-price)]
within(merge(kai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE), { cost = amount * price })[order(-cost)]
within(merge(kai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE), { cost = amount * price; cost.format = format(cost, big.mark = ','); })[order(-cost)]
within(merge(kai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE), { cost = amount * price; cost.format = format(cost, big.mark = ','); })[sum(cost)]
within(merge(kai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE), { cost = amount * price; cost.format = format(cost, big.mark = ','); })[, sum(cost)]
within(merge(kai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE), { cost = amount * price; cost.format = format(cost, big.mark = ','); })[, sum(cost, na.rm = TRUE)]
prices.hubs.20130623.dt[system == 'Jita'][typeName %in% c('Coolant', 'Water-Cooled CPU', 'Consumer Electronics', 'Construction Blocks', 'Nanites', 'Livestock', 'Synthetic Oil', 'Fertilizer', 'Test Cultures')]
item.dt[prices.hubs.20130623.dt][system == 'Jita'][typeName %in% c('Coolant', 'Water-Cooled CPU', 'Consumer Electronics', 'Construction Blocks', 'Nanites', 'Livestock', 'Synthetic Oil', 'Fertilizer', 'Test Cultures')]
item.dt[prices.hubs.20130623.dt][system == 'Jita'][typeName %in% c('Coolant', 'Water-Cooled CPU', 'Consumer Electronics', 'Construction Blocks', 'Nanites', 'Livestock', 'Synthetic Oil', 'Fertilizer', 'Test Cultures')]$price
item.dt[prices.hubs.20130623.dt][system == 'Jita'][typeName %in% c('Coolant', 'Water-Cooled CPU', 'Consumer Electronics', 'Construction Blocks', 'Nanites', 'Livestock', 'Synthetic Oil', 'Fertilizer', 'Test Cultures')]$price * 1520
sum(item.dt[prices.hubs.20130623.dt][system == 'Jita'][typeName %in% c('Coolant', 'Water-Cooled CPU', 'Consumer Electronics', 'Construction Blocks', 'Nanites', 'Livestock', 'Synthetic Oil', 'Fertilizer', 'Test Cultures')]$price * 1520)
item.dt[price.hubs.20130623.dt][system == 'Jita'][typeName == 'Wetware Mainframe']
item.dt[prices.hubs.20130623.dt][system == 'Jita'][typeName == 'Wetware Mainframe']
item.dt[prices.hubs.20130623.dt][system == 'Jita'][typeName == 'Wetware Mainframe']$price
item.dt[prices.hubs.20130623.dt][system == 'Jita'][typeName == 'Wetware Mainframe']$price * 76
(item.dt[prices.hubs.20130623.dt][system == 'Jita'][typeName == 'Wetware Mainframe']$price * 76) - 17000000
(item.dt[prices.hubs.20130623.dt][system == 'Jita'][typeName == 'Wetware Mainframe']$price * 76) - 17000000 - 72484057.6
use.prices.dt
item.dt[grep('Fullerene Intercalated', typeName)]
calculate.construction.cost(30002, ME = 0, price.dt = use.prices.dt[system == 'Jita'])
calculate.construction.cost(30002, ME = 0, price.dt = use.prices.dt[system == 'Jita'], verbose = TRUE)
calculate.construction.cost(30002, ME = 0, price.dt = use.prices.dt[system == 'Jita'], verbose = TRUE)
calculate.construction.cost(30002, ME = 0, price.dt = use.prices.dt[system == 'Jita'])
calculate.construction.cost(30002, ME = 0, price.dt = use.prices.dt[system == 'Jita'])$buildCost
format(calculate.construction.cost(30002, ME = 0, price.dt = use.prices.dt[system == 'Jita'])$buildCost, big.mark = ',')
item.dt[typeID %in% idlist.ship]
construction.ships
construction.ships$typeID
calculate.construction.cost(construction.ships$typeID, ME = 30, price.dt = use.prices.dt[system == 'Dodixie'])
calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = use.prices.dt[system == 'Dodixie'])
profit.dt <- calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = use.prices.dt[system == 'Dodixie'])
profit.dt
profit.dt[1:10]
profit.dt[buildCost > 5000000]
item.dt[grep('Basi', typeName)]
item.dt[grep('Basilisk', typeName)]
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = use.prices.dt[system == 'Dodixie'])
format(calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = use.prices.dt[system == 'Dodixie']), big.mark = '.')
format(calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = use.prices.dt[system == 'Dodixie'])$cost, big.mark = '.')
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = use.prices.dt[system == 'Dodixie']
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = use.prices.dt[system == 'Dodixie'])
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = use.prices.dt[system == 'Dodixie'], verbose = FALSE)
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = use.prices.dt[system == 'Dodixie'], verbose = TRUE)
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = use.prices.dt[system == 'Jita'], verbose = TRUE)
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = use.prices.dt[system == 'Jita'], verbose = FALSE)
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = use.prices.dt[system == 'Jita'], verbose = FALSE)[order(typeName)]
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = use.prices.dt[system == 'Jita'], verbose = TRUE)[order(typeName)]
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = use.prices.dt[system == 'Jita'], verbose = TRUE)
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = use.prices.dt[system == 'Jita'], verbose = TRUE)
mat.dt <- calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = use.prices.dt[system == 'Jita'], verbose = TRUE)
mat.dt
names(mat.dt)
names(mat.dt)[5]
names(mat.dt)[5] <- 'compTypeID'
setnames(mat.dt, c('typeID', 'typeName', 'groupName', 'categoryName', 'compTypeID', 'compTypeName', 'quantity', 'price'))
mat.dt
mat.dt[, list(quantity = sum(quantity), price = price[1]), by = 'compTypeName']
within(mat.dt[, list(quantity = sum(quantity), price = price[1]), by = 'compTypeName'], { cost = quantity * price })
within(mat.dt[, list(quantity = sum(quantity), price = price[1]), by = 'compTypeName'], { cost = quantity * price })[order(-cost)]
3740 * 16000
q()
y
dev_mode(TRUE); load_all('../evecalc'); startup();
prices.hubs.20130626.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie'))
use.prices.dt <- prices.hubs.20130623.dt; caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
newkai.dt <- data.table(read.csv('~/Dropbox/Temp/newkai.csv'))
newkai.dt
merge(newkai.dt, caprica.buy.dt, by = 'typeName')
merge(newkai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)
merge(newkai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[, sum(amount * price, na.rm = TRUE)
merge(newkai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[, sum(amount * price, na.rm = TRUE)]
format(merge(newkai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE)[, sum(amount * price, na.rm = TRUE)], big.mark = ',')
within(merge(newkai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE), { cost = amount * price })
within(merge(newkai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE), { cost = amount * price })[order(-cost)]
within(merge(newkai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE), { cost = amount * price; prettycost = format(cost, big.mark = ','); })[order(-cost)]
kaibuy.dt <- within(merge(newkai.dt, caprica.buy.dt, by = 'typeName', all.x = TRUE), { cost = amount * price; prettycost = format(cost, big.mark = ','); })[order(-cost)]
kaibuy.dt[grep('Fullerite-', typeName)]
kaibuy.dt[grep('Fullerite-', typeName)][, sum(cost)]
format(kaibuy.dt[grep('Fullerite-', typeName)][, sum(cost)], big.mark = ',')
save(prices.hubs.20130626.dt, file = 'data/noautoload/prices.hubs.20130626.rda', compress = 'xz')
lsos()
q()
dev_mode(TRUE); load_all('../evecalc'); startup();
lsos()
kaibuy.dt
save(kaibuy.dt, file = '~/Dropbox/Temp/kaibuy.rda', compress = 'xz')
q()
caprica.buy.dt
dev_mode(TRUE); load_all('../evecalc'); startup();
caprica.buy.dt
item.dt[grep('Standard XL', typeName)]
calculate.construction.cost(17690, ME = 0, price.dt = prices.hubs.20130626.dt[system == 'Jita'])
calculate.construction.cost(17690, ME = 10, price.dt = prices.hubs.20130626.dt[system == 'Jita'])
calculate.construction.cost(17690, ME = 20, price.dt = prices.hubs.20130626.dt[system == 'Jita'])
calculate.construction.cost(17690, ME = 20, price.dt = prices.hubs.20130626.dt[system == 'Jita'], verbose = TRUE)
calculate.construction.cost(17690, ME = 30, price.dt = prices.hubs.20130626.dt[system == 'Jita'], verbose = TRUE)
dil.dt <- data.table(read.csv('~/Dropbox/Temp/dilrazek_buy.csv'))
dil.dt
merge(dil.dt, caprica.buy.dt, by = 'typeName')
merge(dil.dt, caprica.buy.dt, by = 'typeName')[, sum(amount * price)]
format(merge(dil.dt, caprica.buy.dt, by = 'typeName')[, sum(amount * price)], big.mark = ',')
kaibuy.dt
kaibuy.dt[groupName == 'Sleeper Components']
kaibuy.dt[groupName == 'Sleeper Components'][, sum(cost)]
kaibuy.dt[groupName == 'Basic Commodities'][, sum(cost)]
kaibuy.dt[groupName == 'Sleeper Components'][, sum(cost)]
kaibuy.dt[groupName == 'Refined Commodities'][, sum(cost)]
kaibuy.dt[typeName == 'Enriched Uranium']
kaibuy.dt[typeName == 'Mechanical Parts']
kaibuy.dt[groupName == 'Ancient Salvage']
kaibuy.dt[groupName == 'Ancient Salvage'][, sum(cost)]
kaibuy.dt[groupName == 'Ancient Salvage'][typeName != 'Melted Nanoribbons']
kaibuy.dt[groupName == 'Ancient Salvage'][typeName != 'Melted Nanoribbons'][, sum(cost)]
q()
dev_mode(TRUE); load_all('../evecalc/'); startup();
prices.hubs.20130630.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); save(prices.hubs.20130630.dt, file = 'data/noautoload/prices.hubs.20130630.rda', compress = 'xz');
calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = prices.hubs.20130630.dt[system == 'Dodixie'])
profit.dt <- calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = prices.hubs.20130630.dt[system == 'Dodixie'])
profit.dt[price > 10000000]
item.dt[grep('X-Large Ship', typeName)]
calculate.construction.cost(24646, ME = 0, price.dt = prices.hubs.20130630.dt[system == 'Jita'])
calculate.construction.cost(24646, ME = 0, price.dt = prices.hubs.20130630.dt[system == 'Jita'], verbose = TRUE)
prices.hubs.20130703.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); save(prices.hubs.20130703.dt, file = 'data/noautoload/prices.hubs.20130703.rda', compress = 'xz');
item.dt[grep('Nag', typeName)]
item.dt[grep('Nagl', typeName)]
calculate.construction.cost(19722, ME = c(3, 40), price.dt = prices.hubs.20130703.dt[system = 'Dodixie'])
calculate.advanced.construction.cost(19722, ME = c(3, 40), price.dt = prices.hubs.20130703.dt[system = 'Dodixie'])
calculate.advanced.construction.cost(19722, ME = c(3, 40), price.dt = prices.hubs.20130703.dt[system == 'Dodixie'])
caprica.buy.dt
write.csv(caprica.buy.dt, file = '~/Dropbox/EVEOnline/PIPrices/cd_pi_list_20130703.csv', row.names = FALSE)
caprica.buy.dt
lsos()
darz.dt <- data.table(read.csv('~/Dropbox/Temp/darz.csv'))
darz.dt
merge(darz.dt, caprica.buy.dt, by = 'typeName')
merge(darz.dt, caprica.buy.dt, by = 'typeName')[, sum(amount * price)]
merge(darz.dt, caprica.buy.dt, by = 'typeName')[, list(quote = sum(amount * price), quotenice = format(sum(amount * price, big.mark = ',')))]
merge(darz.dt, caprica.buy.dt, by = 'typeName')[, list(quote = sum(amount * price), quotenice = format(sum(amount * price), big.mark = ','))]
merge(darz.dt, caprica.buy.dt, by = 'typeName')[, list(quote = sum(amount * price), pretty.quote = format(sum(amount * price), big.mark = ','))]
lsos()
q()
y
q()
data.table(typeName = c('Fullerite-C320', 'Fullerite-C540'), amount = c(144, 929))
dev_mode(TRUE); load_all('../evecalc'); startup();
data.table(typeName = c('Fullerite-C320', 'Fullerite-C540'), amount = c(144, 929))
merge(data.table(typeName = c('Fullerite-C320', 'Fullerite-C540'), amount = c(144, 929)), caprica.buy.dt, by = 'typeName', all.x = TRUE)
merge(data.table(typeName = c('Fullerite-C320', 'Fullerite-C540'), amount = c(144, 929)), caprica.buy.dt, by = 'typeName', all.x = TRUE)[, sum(amount * price)]
q()
y
y
dev_mode(TRUE); load_all('../evecalc'); startup();
caprica.buy.dt
caprica.buy.dt[grep('C320', typeName)]
caprica.buy.dt[grep('C320', typeName)]$price * 4000
caprica.buy.dt[grep('C320', typeName)]$price * 2000
caprica.buy.dt[grep('C320', typeName)]$price * 1000
q()
y
y
item.dt[grep('Enormous', typeName)]
dev_mode(TRUE); load_all('../evecalc'); startup();
item.dt[grep('Enormous', typeName)]
calculate.construction.cost(33003, ME = 30, price.dt = prices.hubs.20130703.dt[system == 'Dodixie'])
caprica.buy.dt
caprica.buy.dt[typeName == 'Amarr Fuel Block']
caprica.buy.dt[typeName == 'Amarr Fuel Block']$price * 28000
prices.hubs.20130703.dt[typeName == 'Amarr Fuel Block']
prices.hubs.20130703.dt[typeID == 4247]
caprica.sell.dt
caprica.sell.dt$price
caprica.sell.dt$price[3]
caprica.sell.dt$price[3] * 28000
13650 * 40 * 24 * 30
q()
lsos()
dev_mode(TRUE); load_all('../evecalc'); startup();
rm(prices.hubs.20130614.dt, prices.hubs.20130623.dt, prices.hubs.20130626.dt, prices.hubs.20130630.dt)
lsos()
startup();
newkai.dt
kai.dt
lsos()
kaibuy.dt
lsos()
rm(kai.dt, kaibuy.dt, dil.dt, darz.dt)
lsos()
rm(newkai.dt)
mat.dt
rm(mat.dt)
lsos()
rm(prices.hubs.20130529.dt)
lsos()
rm(use.prices.dt)
prices.hubs.20130706.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); save(prices.hubs.20130706.dt, file = 'data/noautoload/prices.hubs.20130706.rda', compress = 'xz');
profit.dt <- calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = prices.hubs.20130706.dt[system == 'Dodixie'])
profit.dt
q()
caprica.buy.dt
lsos()
dev_mode(TRUE); load_all('../evecalc/'); startup();
load('data/noautoload/prices.hubs.20130708.rda')
use.prices.dt <- prices.hubs.20130708.dt; caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
caprica.gas.dt <- data.table(read.csv('~/tmp/caprica.gas.csv'))
caprica.gas.dt
lsos()
tables()
setkey(caprica.buy.dt, typeName)
setkey(caprica.gas.dt, typeName)
caprica.buy.dt[caprica.gas.dt]
caprica.buy.dt[caprica.gas.dt][, list(cost = price * amount)]
caprica.buy.dt[caprica.gas.dt][, list(cost = price * amount)][, sum(cost)]
format(caprica.buy.dt[caprica.gas.dt][, list(cost = price * amount)][, sum(cost)], big.mark = ',')
caprica.sell.dt
caprica.sell.dt$price
caprica.sell.dt$price[3]
caprica.sell.dt$price[3] * 28000
format(caprica.sell.dt$price[3] * 28000, big.mark = ',')
salvage <- data.table(read.csv('~/tmp/salvage.csv'), key = typeName);
salvage <- data.table(read.csv('~/tmp/salvage.csv'));
rm(salvage)
salvage.dt <- data.table(read.csv('~/tmp/salvage.csv'), key = 'typeName');
salvage.dt
caprica.buy.dt[salvage.dt]
caprica.buy.dt[salvage.dt][, list(cost = price * amount)]
caprica.buy.dt[salvage.dt][, list(cost = price * amount)][, sum(cost, na.rm = TRUE)]
format(caprica.buy.dt[salvage.dt][, list(cost = price * amount)][, sum(cost, na.rm = TRUE)], big.mark = ',')
doza.dt <- data.table(read.csv('~/Dropbox/Temp/doza_items.csv'))
doza.dt
doza.dt[, typeName := gsub(' (BP.)', '', typeName.jea)]
doza.dt
doza.dt[, grep('Blueprint', typeName)]
doza.dt[grep('Blueprint', typeName)]
doza.dt[, typeName := gsub(' \(BP.\)', '', typeName.jea)]
doza.dt[, typeName := gsub(' \\(BP.\\)', '', typeName.jea)]
doza.dt[grep('Blueprint', typeName)]
doza.dt[, bpc := grepl('\\(BP.\\)', typeName.jea)]
doza.dt
doza.dt[bpc == TRUE]
doza.dt
doza.dt[grep('Advanced', typeName)]
doza.dt[grep('Advanced', groupName)]
doza.dt[groupName == 'Advanced Commodities']
setkey(doza.dt, typeName)
caprica.buy.dt[doza.dt]
doza.dt[caprica.buy.dt]
caprica.buy.dt[doza.dt]
caprica.buy.dt
doza.dt[caprica.buy.dt]
merge(caprica.buy.dt, doza.dt, by = 'typeName')
doza.dt
doza.trimmed.dt <- doza.dt[, list(typeName, bpc, count)]
doza.dt
doza.trimmed.dt
caprica.buy.dt[doza.trimmed.dt]
caprica.buy.dt
caprica.buy.dt[doza.trimmed.dt]
doza.trimmed.dt[caprica.buy.dt]
tables()
setkey(doza.trimmed.dt, typeName)
doza.trimmed.dt[caprica.buy.dt]
caprica.buy.dt[doza.trimmed.dt]
caprica.buy.dt
doza.trimmed.dt
merge(caprica.buy.dt, doza.trimmed.dt, by = 'typeName')
merge(caprica.buy.dt, doza.trimmed.dt, by = 'typeName')[groupName == 'Advanced Commodities']
merge(caprica.buy.dt, doza.trimmed.dt, by = 'typeName')[groupName == 'Advanced Commodities'][, sum(price * count)]
format(merge(caprica.buy.dt, doza.trimmed.dt, by = 'typeName')[groupName == 'Advanced Commodities'][, sum(price * count)], big.mark = ',')
format(merge(prices.hubs.20130708.dt[system == 'Amarr'], doza.trimmed.dt, by = 'typeName')[groupName == 'Advanced Commodities'][, sum(price * count)], big.mark = ',')
prices.hubs.20130708.dt
prices.hubs.20130708.dt[system == 'Amarr']
item.dt[prices.hubs.20130708.dt][system == 'Amarr']
merge(item.dt[prices.hubs.20130708.dt][system == 'Amarr'], prices.hubs.20130708.dt, by = 'typeID')
merge(item.dt[prices.hubs.20130708.dt][system == 'Amarr'], doza.trimmed.dt, by = 'typeName')
merge(item.dt[prices.hubs.20130708.dt][system == 'Amarr'], doza.trimmed.dt, by = 'typeName')[groupName == 'Advanced Commodities']
merge(item.dt[prices.hubs.20130708.dt][system == 'Amarr'], doza.trimmed.dt, by = 'typeName')[groupName == 'Advanced Commodities'][, sum(price * count)]
merge(item.dt[prices.hubs.20130708.dt][system == 'Amarr'], doza.trimmed.dt, by = 'typeName')[groupName == 'Advanced Commodities'][, sum(bid * count)]
doza.trimmed.dt
merge(item.dt[prices.hubs.20130708.dt][system == 'Amarr'], doza.trimmed.dt, by = 'typeName')
merge(item.dt[prices.hubs.20130708.dt][system == 'Amarr'], doza.trimmed.dt, by = 'typeName')
doza.trimmed.dt
doza.trimmed.dt[grep('Blueprint', typeName)]
doza.trimmed.dt
merge(item.dt[prices.hubs.20130708.dt][system == 'Amarr'], doza.trimmed.dt, by = 'typeName')
merge(item.dt[prices.hubs.20130708.dt][system == 'Amarr'], doza.trimmed.dt, by = 'typeName', all.y = TRUE)
doza.trimmed.dt[grep('Crystal', typeName)]
doza.trimmed.dt[grep('Crystal.*I$', typeName)]
item.dt[doza.trimmed.dt]
merge(doza.trimmed.dt, item.dt, by = 'typeName')
doza.trimmed.dt
merge(doza.trimmed.dt, item.dt, by = 'typeName')[is.na(marketGroupID)]
dev_mode(TRUE); load_all('../evecalc/'); startup();
prices.hubs.20130711.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); save(prices.hubs.20130711.dt, file = 'data/noautoload/prices.hubs.20130711.rda', compress = 'xz');
lsos()
doza.trimmed.dt
merge(doza.trimmed.dt, item.dt, by = 'typeName')
merge(doza.trimmed.dt, item.dt, by = 'typeName')[is.na(marketGroupID)]
merge(doza.trimmed.dt, item.dt, by = 'typeName')[!is.na(marketGroupID)]
merge(doza.trimmed.dt, item.dt, by = 'typeName')[!is.na(marketGroupID)]$typeID
sort(merge(doza.trimmed.dt, item.dt, by = 'typeName')[!is.na(marketGroupID)]$typeID)
unique(sort(merge(doza.trimmed.dt, item.dt, by = 'typeName')[!is.na(marketGroupID)]$typeID))
doza.prices.dt <- get.evecentral.data(unique(sort(merge(doza.trimmed.dt, item.dt, by = 'typeName')[!is.na(marketGroupID)]$typeID)), name.dt = name.dt, system = 'Amarr')
doza.prices.dt
item.dt[doza.prices.dt]
merge(doza.trimmed.dt, item.dt[doza.prices.dt], by = 'typeName')
merge(doza.trimmed.dt, item.dt[doza.prices.dt], by = 'typeName')[groupName == 'Charge']
merge(doza.trimmed.dt, item.dt[doza.prices.dt], by = 'typeName')[categoryName == 'Charge']
merge(doza.trimmed.dt, item.dt[doza.prices.dt], by = 'typeName')[categoryName == 'Charge'][, sum(bid * count)]
merge(doza.trimmed.dt, item.dt[doza.prices.dt], by = 'typeName')[, sum(bid * count)]
format(merge(doza.trimmed.dt, item.dt[doza.prices.dt], by = 'typeName')[, sum(bid * count)], big.mark = ',')
merge(doza.trimmed.dt, item.dt[doza.prices.dt], by = 'typeName')[, sum(bid * count)]
merge(doza.trimmed.dt, item.dt[doza.prices.dt], by = 'typeName')
merge(doza.trimmed.dt, item.dt[doza.prices.dt], by = 'typeName')[order(-count * bid)]
merge(doza.trimmed.dt, item.dt[doza.prices.dt], by = 'typeName')
doza.pricelist.dt <- merge(doza.trimmed.dt, item.dt[doza.prices.dt], by = 'typeName')
doza.pricelist.dt
doza.pricelist.dt[, cost := count * price]
doza.pricelist.dt[order(-cost)]
doza.pricelist.dt[order(-cost)][1:20]
doza.pricelist.dt[, pretty.cost := format(cost, big.mark = ',')]
doza.pricelist.dt
doza.pricelist.dt[order(-cost)]
doza.pricelist.dt[order(-cost)][1:10]
doza.pricelist.dt[categoryName == 'Charge'][order(-cost)]
doza.pricelist.dt[categoryName == 'Charge'][order(-cost)][, sum(cost)]
doza.pricelist.dt[categoryName == 'Ship'][order(-cost)][, sum(cost)]
doza.pricelist.dt[categoryName == 'Ship'][order(-cost)]
doza.pricelist.dt[categoryName == 'Ship'][order(-cost)][, sum(cost)] - 47990000.00
doza.pricelist.dt
doza.pricelist.dt[order(-cost)]
doza.pricelist.dt[order(-cost)][groupName == 'Datacores']
write.csv(doza.pricelist.dt, file = '~/Dropbox/Temp/doza_pricelist.csv', row.names = FALSE)
doza.pricelist.dt[categoryName == 'Module']
doza.pricelist.dt[categoryName == 'Module'][, sum(cost)]
doza.pricelist.dt[categoryName == 'Module'][order(-cost)]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, bid, ask, price, cost, pretty.cost)][categoryName == 'Module'][order(-cost)]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, bid, ask, price, cost, pretty.cost)][categoryName == 'Module'][order(-cost)]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, price, cost, pretty.cost)][categoryName == 'Module'][order(-cost)]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, price, cost = price * bid, pretty.cost = format(price * bid, big.mark = ','))][categoryName == 'Module'][order(-cost)]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, price, cost = count * bid, pretty.cost = format(price * bid, big.mark = ','))][categoryName == 'Module'][order(-cost)]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, price, cost = count * bid, pretty.cost = format(count * bid, big.mark = ','))][categoryName == 'Module'][order(-cost)]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, price, cost = count * bid, pretty.cost = format(count * bid, big.mark = ','))][categoryName == 'Module'][order(-cost)][, sum(cost)]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, price, cost = count * bid, pretty.cost = format(count * bid, big.mark = ','))][categoryName == 'Planetary Interaction'][order(-cost)][, sum(cost)]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, price, cost = count * bid, pretty.cost = format(count * bid, big.mark = ','))][categoryName == 'Planetary Interaction'][order(-cost)]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, price, cost = count * bid, pretty.cost = format(count * bid, big.mark = ','))][categoryName == 'Planetary Interaction'][, sum(cost)]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, price, cost = count * bid, pretty.cost = format(count * bid, big.mark = ','))]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, price, cost = count * bid, pretty.cost = format(count * bid, big.mark = ','))][categoryName %in% c(@Module')]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, price, cost = count * bid, pretty.cost = format(count * bid, big.mark = ','))][categoryName %in% c(@'Module')]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, price, cost = count * bid, pretty.cost = format(count * bid, big.mark = ','))][categoryName %in% c('Module')]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, price, cost = count * bid, pretty.cost = format(count * bid, big.mark = ','))][!categoryName %in% c('Module')]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, price, cost = count * bid, pretty.cost = format(count * bid, big.mark = ','))][!categoryName %in% c('Module', 'Charge')]
doza.pricelist.dt[, list(typeID, typeName, groupName, categoryName, count, price, cost = count * bid, pretty.cost = format(count * bid, big.mark = ','))][!categoryName %in% c('Module', 'Charge')][1:10]
caprica.buy.dt[doza.trimmed.dt]
tables()
setkey(caprica.buy.dt, typeName)
tables()
caprica.buy.dt[doza.trimmed.dt]
merge(doza.trimmed.dt, caprica.buy.dt, by = 'typeName')
merge(doza.trimmed.dt, caprica.buy.dt, by = 'typeName')[, sum(count * price)]
format(merge(doza.trimmed.dt, caprica.buy.dt, by = 'typeName')[, sum(count * price)], big.mark = ',')
pflepsen.dt <- data.table(typeName = 'Fullerite-C320', 'Fullerite-C540', 'Mechanical Parts', 'Enriched Uranium', 'Consumer Electronics'), amount = c(3000, 2000, 6610, 3530, 4750))
pflepsen.dt <- data.table(typeName = c('Fullerite-C320', 'Fullerite-C540', 'Mechanical Parts', 'Enriched Uranium', 'Consumer Electronics'), amount = c(3000, 2000, 6610, 3530, 4750))
pflepsen.dt
caprica.buy.dt[pflepsen.dt]
caprica.buy.dt[pflepsen.dt][, sum(price * amount)]
c5salvage.dt <- data.table(read.csv('~/Dropbox/Temp/c5salvage.csv'))
c5salvage.dt
rm(c5salvage.dt)
c5salvage.dt <- data.table(read.csv('~/Dropbox/Temp/c5salvage.csv'))
c5salvage.dt
c5salvage.dt <- data.table(read.csv('~/Dropbox/Temp/c5salvage.csv'))
c5salvage.dt
c5salvage.dt <- data.table(read.csv('~/Dropbox/Temp/c5salvage.csv'), key = 'typeName')
caprica.buy.dt[c5salvage.dt]
caprica.buy.dt[c5salvage.dt][, sum(price * amount, na.rm = TRUE)]
format(caprica.buy.dt[c5salvage.dt][, sum(price * amount, na.rm = TRUE)], big.mark = ',')
format(caprica.buy.dt[c5salvage.dt][grep('Salvage', groupName)][, sum(price * amount, na.rm = TRUE)], big.mark = ',')
caprica.buy.dt[c5salvage.dt][grep('Salvage', groupName)]
caprica.buy.dt[c5salvage.dt][grep('Salvage', groupName)][order(-amount * price)]
eve.dt <- data.table(read.csv('~/tmp/eve_orders/malromen_20130714.csv'))
malromen.dt <- data.table(read.csv('~/tmp/eve_orders/malromen_20130714.csv'))
rm(eve.dt)
malromen.dt <- data.table(read.csv('~/tmp/eve_orders/malromen_20130714.csv'), key = 'typeName')
caprica.buy.dt[malromen.dt]
malromen.dt
caprica.buy.dt[malromen.dt][, sum(price * amount)]
caprica.buy.dt[malromen.dt][, sum(price * amount)]
caprica.buy.dt[malromen.dt][, sum(price * amount, na.rm = TRUE)]
format(caprica.buy.dt[malromen.dt][, sum(price * amount, na.rm = TRUE)], big.mark = ',')
prices.hubs.20130714.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); save(prices.hubs.20130714.dt, file = 'data/noautoload/prices.hubs.20130714.rda', compress = 'xz');
profit.dt <- calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = prices.hubs.20130714.dt[system == 'Dodixie'])
profit.dt
prices.hubs.20130715.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); save(prices.hubs.20130715.dt, file = 'data/noautoload/prices.hubs.20130715.rda', compress = 'xz');
gc()
?gc
gc(verbose = TRUE);
prices.hubs.20130715.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); save(prices.hubs.20130715.dt, file = 'data/noautoload/prices.hubs.20130715.rda', compress = 'xz');
lsos()
use.prices.dt <- prices.hubs.20130715.dt; caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
aiko.dt <- data.table(read.csv('~/tmp/aiko.csv'), key = 'typeName')
aiko.dt
caprica.buy.dt[aiko.dt]
aiko.dt[caprica.buy.dt]
str(aiko.dt)
aiko.dt <- data.table(read.csv('~/tmp/aiko.csv'), key = 'typeName')
str(aiko.dt)
str(caprica.buy.dt)
caprica.buy.dt[aiko.dt]
tables()
setkey(caprica.buy.dt, typeName)
caprica.buy.dt[aiko.dt]
aiko.dt[caprica.buy.dt]
caprica.buy.dt[aiko.dt]
caprica.buy.dt[aiko.dt][, sum(price * amount)]
format(caprica.buy.dt[aiko.dt][, sum(price * amount)], big.mark = ',')
item.dt[grep('Adaptive', typeName)]
item.dt[grep('Adaptive Aug', typeName)]
calculate.construction.cost(29979, ME = 0, price.dt = prices.hubs.20130715.dt[system == 'Jita'])
calculate.construction.cost(29979, ME = 0, price.dt = prices.hubs.20130715.dt[system == 'Jita'], verbose = TRUE)
prices.hubs.20130715.dt[system == 'Jita']
prices.hubs.20130715.dt[system == 'Jita'][typeID == 29979]
calculate.construction.cost(29979, ME = 0, price.dt = prices.hubs.20130715.dt[system == 'Jita'], verbose = TRUE)
q()
y
lsos()
gc(verbose = TRUE);
lsos()
rm(list = ls())
 dev_mode(TRUE); load_all('../evecalc/'); startup();
lsos()
prices.hubs.20130806.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie'))
prices.hubs.20130806.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie'))
save(prices.hubs.20130806.dt, file = 'data/noautoload/prices.hubs.20130806.rda', compress = 'xz')
use.prices.dt <- prices.hubs.20130806.dt; caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
item.dt[grep('Electric', typeName)]
dev_mode(TRUE): load_all('../evecalc/'); startup();
dev_mode(TRUE): load_all('../evecalc'); startup();
dev_mode(TRUE): load_all('../evecalc')
dev_mode(TRUE); load_all('../evecalc'); startup();
get.component.data(21592)
dilrazek.dt <- data.table(read.csv('~/tmp/dilrazek.csv'), key = typeName)
dilrazek.dt <- data.table(read.csv('~/tmp/dilrazek.csv'), key = "typeName")
caprica.buy.dt[dilrazek.dt]
setkey(caprica.buy.dt, typeName)
caprica.buy.dt[dilrazek.dt]
caprica.buy.dt[dilrazek.dt][, sum(price * amount)]
lc.dt <- data.table(read.csv('~/tmp/lumierre.csv'), key = 'typeName')
lc.dt
caprica.buy.dt[lc.dt]
caprica.buy.dt[lc.dt][, sum(price * amount)]
profit.dt
profit.dt <- calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = prices.hubs.20130806.dt[system == 'Dodoxie'])
profit.dt
construction.ships$typeID
construction.ships
calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = prices.hubs.20130806.dt[system == 'Dodoxie'])
calculate.construction.profit
calculate.construction.cost(construction.ships$typeID, ME = 30, price.dt = prices.hubs.20130806.dt[system == 'Dodixie'])
calculate.construction.profit
merge(calculate.construction.cost(construction.ships$typeID, ME = 30, price.dt = prices.hubs.20130806.dt[system == 'Dodixie'])[, list(typeID, typeName, buildCost, buildWaste, maxWaste, wasteRatio)], prices.hubs.20130806.dt, by = 'typeID')
merge(calculate.construction.cost(construction.ships$typeID, ME = 30, price.dt = prices.hubs.20130806.dt[system == 'Dodixie'])[, list(typeID, typeName, buildCost, buildWaste, maxWaste, wasteRatio)], prices.hubs.20130806.dt[system == 'Dodixie'], by = 'typeID')
dev_mode(TRUE); load_all('../evecalc'); startup();
dev_mode(TRUE); load_all('../evecalc'); startup(); calculate.construction.cost(construction.ships$typeID, ME = 30, price.dt = prices.hubs.20130806.dt[system == 'Dodixie'])
dev_mode(TRUE); load_all('../evecalc'); startup(); profit.dt <- calculate.construction.cost(construction.ships$typeID, ME = 30, price.dt = prices.hubs.20130806.dt[system == 'Dodixie'])
profit.dt
dev_mode(TRUE); load_all('../evecalc'); startup(); profit.dt <- calculate.construction.cost(construction.ships$typeID, ME = 30, price.dt = prices.hubs.20130806.dt[system == 'Dodixie'])
profit.dt
dev_mode(TRUE); load_all('../evecalc'); startup(); profit.dt <- calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = prices.hubs.20130806.dt[system == 'Dodixie'])
profit.dt
varos.dt <- data.table(read.csv('~/tmp/varos.csv'))
varos.dt
varos.dt <- data.table(read.csv('~/tmp/varos.csv'), key = 'typeName')
caprica.buy.dt[varos.dt]
caprica.buy.dt[varos.dt][, sum(price * amount)]
format(caprica.buy.dt[varos.dt][, sum(price * amount)], big.mark = '.')
timmyhorton.dt <- data.table(read.csv('~/tmp/timmyhorton.csv'), key = 'typeName')
timmyhorton.dt
caprica.buy.dt[timmyhorton.dt]
prices.hubs.20130806.dt
item.dt[prices.hubs.20130806.dt]
item.dt[prices.hubs.20130806.dt][system == 'Jita']
item.dt[prices.hubs.20130806.dt][system == 'Jita'][grep('Compressed', typeName)]
item.dt[prices.hubs.20130806.dt][system == 'Amarr'][grep('Compressed', typeName)]
timmyhorton.dt
timmyhorton.dt <- data.table(read.csv('~/tmp/timmyhorton.csv'), key = 'typeName')
caprica.buy.dt[timmyhorton.dt]
caprica.buy.dt[timmyhorton.dt][, sum(price * amount)]
prices.hubs.20130806.dt[system == 'Jita'][timmyhorton.dt][, sum(price * amount)]
setkey(prices.hubs.20130806.dt, typeName)
prices.hubs.20130806.dt[system == 'Jita'][timmyhorton.dt][, sum(price * amount)]
caprica.sell.dt
caprica.sell.dt$price[3]
caprica.sell.dt$price[3] * 28000
test.dt <- prices.hubs.20130806.dt[system == 'Jita']
test.dt
test.dt <- item.dt[prices.hubs.20130806.dt][system == 'Jita']
test.dt
test.dt <- item.dt[prices.hubs.20130806.dt][system == 'Jita'][, list(typeID, date, typeName, groupName, categoryName, bid, ask, price)]
test.dt
test.dt[timmyhorton.dt]
setkey(test.dt, typeName)
test.dt[timmyhorton.dt]
test.dt <- item.dt[prices.hubs.20130806.dt][system == 'Jita'][, list(typeID, date, typeName, groupName, categoryName, bid, ask, price)][, sum(bid * 0.9 * amount)]
test.dt <- item.dt[prices.hubs.20130806.dt][system == 'Jita'][, list(typeID, date, typeName, groupName, categoryName, bid, ask, price)]
test.dt[timmyhorton.dt][, sum(bid * 0.9 * amount)]
test.dt[timmyhorton.dt]
setkey(test.dt, typeName)
test.dt[timmyhorton.dt][, sum(bid * 0.9 * amount)]
test.dt
test.dt <- item.dt[prices.hubs.20130806.dt][system == 'Jita'][, list(typeID, date, system, typeName, groupName, categoryName, bid, ask, price), key = 'typeName']
test.dt
test.dt[timmyhorton.dt][, sum(bid * 0.9 * amount)]
test.dt[timmyhorton.dt][, sum(round(bid * 0.9, 2) * amount)]
gc()
lsos()
dev_mode(TRUE); load_all('../evecalc/'); startup();
lsos()
item.dt[groupName == 'Ice Product']
item.dt[groupName == 'Ice Product']$typeID
prices.hubs.20130806.dt[system == 'Jita'][typeID %in% item.dt[groupName == 'Ice Product']$typeID]
prices.hubs.20130806.dt[system == 'Jita'][typeID %in% item.dt[groupName == 'Ice Product']$typeID]$price
ice.prices <- prices.hubs.20130806.dt[system == 'Jita'][typeID %in% item.dt[groupName == 'Ice Product']$typeID]$price
names(ice.prices) <- item.dt[groupName == 'Ice Product']$typeName
ice.prices
ice.prices / ice.prices[1]
price.weights.ice <- ice.prices / ice.prices[1]
price.weights.ice
idlist.ice
item.dt[typeID %in% idlist.asteroid]
item.dt[typeID %in% idlist.asteroid][groupName == 'Ice']
item.dt[typeID %in% idlist.asteroid][groupName == 'Ice']$typeID
prices.hubs.20130806.dt[typeID %in% item.dt[typeID %in% idlist.asteroid][groupName == 'Ice']$typeID]
prices.hubs.20130806.dt[system == 'Jita'][typeID %in% item.dt[typeID %in% idlist.asteroid][groupName == 'Ice']$typeID]
calculate.implied.mineral.prices
calculate.implied.mineral.prices(price.weights.ice, item.dt[groupName == 'Ice']$typeID, price.dt = prices.hubs.20130806.dt[system == 'Jita'])
prices.hubs.20130806.dt[system == 'Jita'][typeNaem == 'Helium Isotopes']
item.dt[groupName == 'Ice Product']
prices.hubs.20130806.dt[typeID == 16274]
prices.hubs.20130813.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Dodixie', 'Amarr', 'Rens')]
q()
y
dev_mode(TRUE); load_all('../evecalc'); startup();
item.dt
item.dt[grep('Large Capacitor', typeName)]
calculate.advanced.construction.cost(26374, ME = c(0, 30), price.dt = prices.hubs.20130813.dt)
calculate.construction.cost(26374, ME = 0, price.dt = prices.hubs.20130813.dt)
calculate.construction.cost(26374, ME = 0, price.dt = prices.hubs.20130813.dt)$buildCost
format(calculate.construction.cost(26374, ME = 0, price.dt = prices.hubs.20130813.dt)$buildCost, big.mark = ',')
prices.hubs.20130813.dt[typeID == 26374]
calculate.construction.cost(26374, ME = 0, price.dt = prices.hubs.20130813.dt, verbose = TRUE)
calculate.construction.cost(26374, ME = 0, price.dt = prices.hubs.20130813.dt[system == 'Jita'])
save(prices.hubs.20130813.dt, file = 'data/noautoload/prices.hubs.20130813.rda', compress = 'xz')
q()
dev_mode(TRUE); load_all('../evecalc'); startup();
prices.hubs.20130813.dt[system == 'Amarr']
item.dt[grep('Capital Construction', typeName)]
calculate.construction.cost(21037, ME = 30, price.dt = prices.hubs.20130813.dt[system == 'Amarr'])
calculate.construction.cost(21037, ME = 30, price.dt = prices.hubs.20130813.dt[system == 'Amarr'])$buildCost
calculate.construction.cost(21037, ME = 30, price.dt = prices.hubs.20130813.dt[system == 'Amarr'])$buildCost * 20
calculate.construction.cost(21037, ME = 30, price.dt = prices.hubs.20130813.dt[system == 'Amarr'])$buildCost * 20 + 18.8
calculate.construction.cost(21037, ME = 30, price.dt = prices.hubs.20130813.dt[system == 'Amarr'])$buildCost * 20 + 18800000
format(calculate.construction.cost(21037, ME = 30, price.dt = prices.hubs.20130813.dt[system == 'Amarr'])$buildCost * 20 + 18800000, big.mark = ',')
format(calculate.construction.cost(21037, ME = 100, price.dt = prices.hubs.20130813.dt[system == 'Amarr'])$buildCost * 20 + 18800000, big.mark = ',')
item.dt[grep('Concussion', typeName)]
calculation
calculate.construction.cost(27912, ME = 200, price.dt = prices.hubs.20130813.dt[system == 'Jita'])
calculate.construction.cost(27912, ME = 200, price.dt = prices.hubs.20130813.dt[system == 'Jita'])$buildCost / 20
format(calculate.construction.cost(27912, ME = 200, price.dt = prices.hubs.20130813.dt[system == 'Jita'])$buildCost / 20, big.mark = ',')
caprica.sell.dt
caprica.sell.dt
caprica.sell.dt$price
caprica.sell.dt$price[3] * 28000
format(caprica.sell.dt$price[3] * 28000, big.mark = ',')
format(caprica.sell.dt$price[3] * 35000, big.mark = ',')
caprica.sell.dt$price[3] * 35000
lsos()
item.dt[grep('Moros', typeName)]
calculate.advanced.construction.cost(19724, ME = c(3, 50), price.dt = prices.hubs.20130813.dt[system == 'Amarr'])
calculate.advanced.construction.cost(19724, ME = c(3, 50), price.dt = prices.hubs.20130813.dt[system == 'Amarr'], verbose = TRUE)
calculate.advanced.construction.cost(19724, ME = c(3, 50), price.dt = prices.hubs.20130813.dt[system == 'Amarr'], verbose = TRUE)[, c(5:8), with = FALSE]
calculate.advanced.construction.cost(19724, ME = c(3, 50), price.dt = prices.hubs.20130813.dt[system == 'Amarr'], verbose = TRUE)[, c(5:8), with = FALSE][, list(quantity = sum(quantity), price = unique(price)), by = list(typeID, typeName)]
item.dt[grep('Triage', typeName)]
calculate.advanced.construction.cost(4294, ME = c(-4, 30), price.dt = prices.hubs.20130813.dt[system == 'Jita'])
calculate.advanced.construction.cost(4294, ME = c(-4, 30), price.dt = prices.hubs.20130813.dt[system == 'Jita'], verbose = TRUE)
use.prices.dt
item.dt[grep('Nag', typeName)]
calculate.advanced.construction.cost(19722, ME = c(4, 30), price.dt = prices.hubs.20130813.dt[system == 'Jita'], verbose = TRUE)
calculate.advanced.construction.cost(19722, ME = c(4, 30), price.dt = prices.hubs.20130813.dt[system == 'Jita'], verbose = FALSE)
calculate.advanced.construction.cost(19722, ME = c(4, 30), price.dt = prices.hubs.20130813.dt[system == 'Jita'], verbose = TRUE)[, 4:8, with = FALSE]
calculate.advanced.construction.cost(19722, ME = c(4, 30), price.dt = prices.hubs.20130813.dt[system == 'Jita'], verbose = TRUE)[, 5:8, with = FALSE]
calculate.advanced.construction.cost(19722, ME = c(4, 30), price.dt = prices.hubs.20130813.dt[system == 'Jita'], verbose = TRUE)[, 5:8, with = FALSE][, list(quantity = sum(quantity), price = unique(price)), by = list(typeID, typeName)]
calculate.advanced.construction.cost(19722, ME = c(2, 30), price.dt = prices.hubs.20130813.dt[system == 'Jita'], verbose = TRUE)[, 5:8, with = FALSE][, list(quantity = sum(quantity), price = unique(price)), by = list(typeID, typeName)]
prices.hubs.20130821.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie'))
use.prices.dt <- prices.hubs.20130821; caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
use.prices.dt <- prices.hubs.20130821.dt; caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
dilrazek.dt <- data.table(read.csv('~/Dropbox/Temp/dilrazek.csv'), key = 'typeName')
dilrazek.dt
caprica.buy.dt[dilrazek.dt]
setkey(caprica.buy.dt, typeName = 'typeName')
caprica.buy.dt[dilrazek.dt]
caprica.buy.dt[dilrazek.dt][, sum(price * amount)]
pflepsen.dt <- data.table(read.csv('~/Dropbox/Temp/pflepsen.csv'), key = 'typeName')
pflepsen.dt
caprica.buy.dt[pflepsen][, sum(price * amount)]
caprica.buy.dt[pflepsen.dt][, sum(price * amount)]
pflepsen.dt <- data.table(read.csv('~/Dropbox/Temp/pflepsen.csv'), key = 'typeName')
caprica.buy.dt[pflepsen.dt][, sum(price * amount)]
q()
lsos()
kailo.dt <- data.table(read.csv('~/Dropbox/Temp/kailo.csv', stringsAsFactors = FALSE))
kailo.dt
kailo.dt <- data.table(read.csv('~/Dropbox/Temp/kailo.csv', stringsAsFactors = FALSE), key = 'typeName')
caprica.buy.dt[kailo.dt]
caprica.buy.dt[kailo.dt][, sum(price * amount)]
kailo.quote.dt <- caprica.buy.dt[kailo.dt]
kailo.quote.dt
kailo.quote.dt[, total := price * amount]
kailo.quote.dt
kailo.quote.dt[, total.format := format(price * amount, big.mark = ',')]
kailo.quote.dt
kailo.quote.dt[order(-total)]
q()
dev_mode(TRUE); load_all('../evecalc'); startup();
lsos()
kailo.quote.dt
kailo.dt
item.dt[typeID == 30377]
9156 * 5
caprica.buy.dt
caprica.sell.dt
caprica.sell.dt * 28000
caprica.sell.dt$price * 28000
caprica.sell.dt$price[3] * 28000
caprica.buy.dt[kailo.dt]
kailo.quote.dt
kailo.quote.dt[order(-total)]
kailo.quote.dt[order(-total)][, list(typeName, price, amount, total, total.format)]
kailo.quote.dt[order(-total)][, list(typeName, price, amount, total, total.format)][, sum(total)]
kailo.quote.dt[order(-total)]
kailo.quote.dt[order(-total)]
kailo.quote.dt[order(-total)][grep('Planetary', categoryName)]
kailo.quote.dt[order(-total)][grep('Planetary', categoryName)]
kailo.quote.dt[order(-total)][grep('Planetary', categoryName)][, sum(total)]
kailo.quote.dt[order(-total)][grep('Planetary', categoryName)]
kailo.quote.dt[order(-total)][grep('Planetary', categoryName)]
kailo.quote.dt[order(-total)][grep('Planetary', categoryName)][, sum(total)]
dilrazek.dt <- data.table(read.csv('~/tmp/dilrazek.csv', stringsAsFactors = FALSE), key = 'typeName')
dilrazek.dt
caprica.buy.dt[dilrazek.dt]
caprica.buy.dt[rbind(dilrazek.dt, data.table('Mechanical Parts', -419)]
caprica.buy.dt[rbind(dilrazek.dt, data.table('Mechanical Parts', -419))]
caprica.buy.dt[rbind(dilrazek.dt, data.table(typeName = 'Mechanical Parts', amount = -419))]
caprica.buy.dt[rbind(dilrazek.dt, data.table(typeName = 'Mechanical Parts', amount = -419))][, sum(price * amount)]
caprica.buy.dt[rbind(dilrazek.dt, data.table(typeName = 'Mechanical Parts', amount = -419))]
dilrazek.quote.dt <- caprica.buy.dt[rbind(dilrazek.dt, data.table(typeName = 'Mechanical Parts', amount = -419))]
dilrazek.quote.dt <- caprica.buy.dt[rbind(dilrazek.dt, data.table(typeName = 'Mechanical Parts', amount = -419))]; dilrazek.quote.dt[, total := price * amount]
dilrazek.quote.dt
dilrazek.quote.dt[, sum(total)]
lsos()
dir('data/')
dir('data/noautoload/')
dir('data/noautoload/prices/')
save(prices.hubs.20130821.dt, file = 'data/noautoload/prices/prices.hubs.20130821.rda', compress = 'xz')
lsos()
q()
y
dev_mode(TRUE); load_all('../evecalc'); startup();
lsos()
item.dt[grep('Moros', typeName)]
calculate.advanced.construction.cost(19724, ME = c(4, 100), price.dt = prices.hubs.20130821.dt[system = 'Dodixie'])
calculate.advanced.construction.cost(19724, ME = c(4, 100), price.dt = prices.hubs.20130821.dt[system == 'Dodixie'])
calculate.advanced.construction.cost(19724, ME = c(6, 100), price.dt = prices.hubs.20130821.dt[system == 'Dodixie'])
item.dt[grep('Archon', typeName)]
calculate.advanced.construction.cost(23757, ME = c(4,100), price.dt = prices.hubs.20130821.dt[system == 'Dodixie'])
calculate.advanced.construction.cost(23757, ME = c(8,100), price.dt = prices.hubs.20130821.dt[system == 'Dodixie'])
calculate.advanced.construction.cost(23757, ME = c(8, 50), price.dt = prices.hubs.20130821.dt[system == 'Dodixie'])
866 + 230
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20130827.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20130827.dt; caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
caprica.buy.dt
str(caprica.buy.dt)
tables()
setkey(caprica.buy.dt, typeName);
caprica.buy.dt
lsos()
rm(lc.dt, dilrazek.dt, prices.hubs.20130806.dt, prices.hubs.20130813.dt, prices.hubs.20130821.dt)
lsos()
lsos()
rm(dilrazek.quote.dt, timmyhorton.dt, pflepsen.dt, varos.dt)
lsos()
rm(kailo.quote.dt, kailo.dt)
lsos()
dev_mode(TRUE); load_all('../evecalc/'); startup();
library(XML)
?xmlToDataFrame
xmlToDataFrame('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml')
?xmlToDataFrame
?xmlToDataFrame
xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml')
xmlToDataFrame(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))
xmlToDataFrame('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', nodes = 'row')
?xmlToDataFrame
getNodeSet
getNodeSet('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', '//rowset/row')
getNodeSet
?xmlToDataFrame
getNodeSet('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', '/row')
getNodeSet('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', 'row')
getNodeSet('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', '//row')
getNodeSet('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml')
getNodeSet('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', '/eveapi/result/rowset')
getNodeSet('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', '/eveapi/result/rowset/row')
xmlToDataFrame(nodes = getNodeSet('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', '//rowset/row'))
xmlToDataFrame(nodes = getNodeSet('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', '/result'))
xmlToDataFrame(nodes = getNodeSet('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', '/eveapi'))
getNodeSet('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', '/eveapi')
getNodeSet('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', 'eveapi')
getNodeSet('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml')
?xmlToDataFrame
?xmlToDataFrame
getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))
getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi')
getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/rowset')
getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result')
getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset')
getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset/row')
xmlToDataFrame(getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset/row'))
xmlToDataFrame(nodes = getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset/row'))
xmlToDataFrame(nodes = getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset'))
xmlToDataFrame(nodes = getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset/row'))
xmlToDataFrame(nodes = getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result'))
xmlToDataFrame(nodes = getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset'))
str(xmlToDataFrame(nodes = getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset')))
str(xmlToDataFrame(nodes = getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset/row')))
str(xmlToDataFrame(nodes = getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset')))
xmlToDataFrame(nodes = getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset'))
getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset')
str(getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset'))
getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset')
getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset/row')
xmlToList(getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset/row'))
getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset/row')
getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset/row')
xmlToDataFrame(nodes = getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '/eveapi/result/rowset/row'))
xmlToDataFrame(nodes = getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '//eveapi/result/rowset/row'))
xmlToDataFrame(nodes = getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '//row'))
xmlToDataFrame(nodes = getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '//rowset'))
xmlToDataFrame(nodes = getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '//eveapi/result/rowset/row'))
xmlChildren(xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))[['row']])
xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))[['row']]
xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))
xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))[["rowset"]]
xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))[["row"]]
xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))[["eveapi"]]
?system.file
system.file('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', package = 'XML')
system.file('data/noautoload/evehqfiles/20130803', 'EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', package = 'XML')
xmlParse(system.file('data/noautoload/evehqfiles/20130803', 'EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', package = 'XML'))
xmlParse(system.file('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml', package = 'XML'))
xmlParse(file('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))
xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml')
str(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))
xmlToDataFrame('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))
xmlToDataFrame('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml')
xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))
xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))[['result']]
xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))[['rowset']]
head(xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml')))
xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))
xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))[['result']]
xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))[['rowset']]
xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))
xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))[['result']]
head(xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))[['result']])
xmlToDataFrame(xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))[['result']])
xmlToDataFrame(nodes = xmlRoot(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'))[['result']])
?xmlToDataFrame
xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml')
getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '//rowset')
str(getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '//rowset'))
getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '//rowset')
xmlToDataFrame(getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '//rowset'))
getNodeSet(xmlParse('data/noautoload/evehqfiles/20130803/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml'), '//rowset')
lsos()
dir('data/noautoload/prices/')
save(prices.hubs.20130827.dt, file = 'data/noautoload/prices/prices.hubs.20130827.rda', compress = 'xz')
lsos()
prices.hubs.20130827.dt
caprica.buy.dt
write.csv(caprica.buy.dt, file = '~/Dropbox/Temp/caprica_buy_20130827.csv', row.names = FALSE)
martin.dt <- fread('~/tmp/martin.csv')
martin.dt
martin.dt <- fread('~/tmp/martin.csv')
martin.dt <- fread('~/tmp/martin.csv', key = 'typeName')
martin.dt <- fread('~/tmp/martin.csv')
tables()
setkey(martin.dt, typeName)
caprica.buy.dt[martin.dt]
martin.quote.dt <- caprica.buy.dt[martin.dt]
martin.quote.dt[, cost = price * amount]
martin.quote.dt[, cost := price * amount]
martin.quote.dt
martin.quote.dt[order(cost)]
martin.quote.dt[order(-cost)]
martin.quote.dt[, sum(cost)]
format(martin.quote.dt[, sum(cost)], big.mark = ',')
martin.quote.dt[order(-cost)][, list(typeName, price, amount, cost)]
library(XML)
xmlTreeParse('data/noautoload/evehqfiles/20130814/EVEHQAPI_WalletJournalCorp_2259173_98190867_1000_0.xml')
q()
lsos()
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20130910.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20130910.dt; caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
dir('data/noautoload/')
dir('data/noautoload/prices/')
lsos()
save(prices.hubs.20130910.dt, file = 'data/noautoload/prices/prices.hubs.20130910.rda', compress = 'xz')
 item.dt[prices.hubs.20130910.dt]
 item.dt[prices.hubs.20130910.dt][typeName == 'Basilisk']
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = prices.hubs.20130910.dt[system == 'Dodixie'])
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = prices.hubs.20130910.dt[system == 'Dodixie'], verbose = TRUE)
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = prices.hubs.20130910.dt[system == 'Jita'], verbose = TRUE)
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = prices.hubs.20130910.dt[system == 'Jita'], verbose = FALSE)
calculate.advanced.construction.cost(11985, ME = c(-1, 30), price.dt = prices.hubs.20130910.dt[system == 'Amarr'], verbose = FALSE)
dilrazek.dt <- fread('~/Dropbox/Temp/dilrazek.csv')
setkey(dilrazek.dt, typeName)
dilrazek.dt[caprica.buy.dt]
setkey(caprica.buy.dt)
setkey(caprica.buy.dt, typeName)
dilrazek.dt[caprica.buy.dt]
caprica.buy.dt[dilrazek.dt]
caprica.buy.dt[dilrazek.dt][, sum(price * amount)]
dilrazek.dt
caprica.buy.dt[typeName == "Robotics"]
caprica.buy.dt[typeName == "Robotics"]$price * 294
item.dt[grep('Dissonic', typeName)]
calculate.construction.cost(30127, ME = 0, price.dt = prices.hubs.20130910.dt[system == 'Jita'])
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20130917.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20130917.dt; save(prices.hubs.20130917.dt, file = 'data/noautoload/prices/prices.hubs.20130917.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
caprica.sell.dt
caprica.sell.dt[3]$price
caprica.sell.dt[3]$price * (5000 + 28000)
item.dt[grep('Naga', typeName)]
calculate.construction.cost(4306, ME = 30, price.dt = prices.hubs.20130917.dt[system == 'Dodixie'])
lcgas.dt <- fread('~/tmp/lcgas.csv', key = 'typeName')
lcgas.dt <- fread('~/tmp/lcgas.csv')
tables()
setkey(lcgas.dt, typeName)
caprica.buy.dt[lcgas.dt]
setkey(caprica.buy.dt, typeName)
caprica.buy.dt[lcgas.dt]
caprica.buy.dt[lcgas.dt][, sum(price * amount)]
q()
y
dev_mode(TRUE); startup();
dev_mode(TRUE); load_all('../evecalc/');
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131006.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131006.dt; save(prices.hubs.20131006.dt, file = 'data/noautoload/prices/prices.hubs.20131006.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
lsos()
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131006.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131006.dt; save(prices.hubs.20131006.dt, file = 'data/noautoload/prices/prices.hubs.20131006.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
caprica.sell.dt
caprica.sell.dt[typeID %in% idlist.gas]
caprica.buy.dt[typeID %in% idlist.gas]
item.dt[caprica.buy.dt][typeID %in% idlist.gas]
item.dt[caprica.buy.dt][typeID %in% idlist.gas][typeID %in% 30370:30378]
item.dt[caprica.buy.dt][typeID %in% 30370:30379]
item.dt[caprica.buy.dt][typeID %in% 30370:30379][, list(typeName, volume, price, ISKm3)]
item.dt[caprica.buy.dt][typeID %in% 30370:30379][, list(typeName, volume, price, ISKm3 = price / volume)]
item.dt[caprica.buy.dt][typeID %in% 30370:30379][, list(typeName, volume, price, ISKm3 = price / volume)][order(-ISKm3)]
item.dt[caprica.buy.dt][typeID %in% 30370:30379][, list(typeName, volume, price, ISKm3 = price / volume)][order(-ISKm3)]$typeName
paste(item.dt[caprica.buy.dt][typeID %in% 30370:30379][, list(typeName, volume, price, ISKm3 = price / volume)][order(-ISKm3)]$typeName)
item.dt[grep('Megathron', typeName)]
get.blueprint.data(641)
item.dt[grep('Moros', typeName)]
calculate.construction.cost(3714, ME = 2, price.dt = prices.hubs.20131006.dt)
calculate.construction.cost(3714, ME = 2, price.dt = prices.hubs.20131006.dt[system == 'Amarr'])
calculate.construction.cost(3714, ME = 2, price.dt = prices.hubs.20131006.dt[system == 'Amarr'], verbose = TRUE)
read.wallet.transactions
dir('data/noautoload/evehqfiles/20131002', pattern = 'WalletTransCorp')
dir('data/noautoload/evehqfiles/20131002', pattern = 'WalletTransCorp_1590')
read.wallet.transactions(dir('data/noautoload/evehqfiles/20131002', pattern = 'WalletTransCorp_1590'))
library(XML)
read.wallet.transactions(dir('data/noautoload/evehqfiles/20131002', pattern = 'WalletTransCorp_1590'))
read.wallet.transactions(dir('data/noautoload/evehqfiles/20131002', pattern = 'WalletTransCorp_1590'))
read.wallet.transactions(dir('data/noautoload/evehqfiles/20131002', pattern = 'WalletTransCorp_1590')[1])
read.wallet.transactions(dir('data/noautoload/evehqfiles/20131002', pattern = 'WalletTransCorp_1590', full.names = TRUE))
dev_mode(TRUE); load_all('../evecalc/'); startup(): read.wallet.transactions(dir('data/noautoload/evehqfiles/20131002', pattern = 'WalletTransCorp_1590', full.names = TRUE))
dev_mode(TRUE); load_all('../evecalc/'); startup(); read.wallet.transactions(dir('data/noautoload/evehqfiles/20131002', pattern = 'WalletTransCorp_1590', full.names = TRUE))
dev_mode(TRUE); load_all('../evecalc/'); startup(); read.wallet.transactions(dir('data/noautoload/evehqfiles/20131002', pattern = 'WalletTransCorp_1590', full.names = TRUE))
dev_mode(TRUE); load_all('../evecalc/'); startup(); read.wallet.transactions(dir('data/noautoload/evehqfiles/20131002', pattern = 'WalletJournalCorp_1590', full.names = TRUE))
item.dt[caprica.buy.dt][typeID %in% 30370:30379][, list(typeName, volume, price, ISKm3 = price / volume)][order(-ISKm3)]$typeName
item.dt[caprica.buy.dt][typeID %in% 30370:30379][, list(typeName, volume, price, ISKm3 = price / volume)][order(-ISKm3)]
q()
)
y
dev_mode(TRUE); load_all('../evecalc/'); startup();
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131014.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131014.dt; save(prices.hubs.20131014.dt, file = 'data/noautoload/prices/prices.hubs.20131014.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131014.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131014.dt; save(prices.hubs.20131014.dt, file = 'data/noautoload/prices/prices.hubs.20131014.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
lsos()
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup();
caprica.sell.dt
caprica.sell.dt[1:10]
caprica.sell.dt[3]
caprica.sell.dt[3]$price * 21000
item.dt[grep('Capacitor', typeName)]
item.dt[grep('Capital Capacitor', typeName)]
calculate.construction.cost(31380, ME = -1, price.dt = prices.hubs.20131014.dt[system == 'Jita'])
calculate.construction.cost(31380, ME = -1, price.dt = prices.hubs.20131014.dt[system == 'Jita'])
calculate.construction.cost(31380, ME = -1, price.dt = prices.hubs.20131014.dt[system == 'Jita'])$buildCost
format(calculate.construction.cost(31380, ME = -1, price.dt = prices.hubs.20131014.dt[system == 'Jita']), big.mark= ',')
format(calculate.construction.cost(31380, ME = -1, price.dt = prices.hubs.20131014.dt[system == 'Jita'])$buildCost, big.mark= ',')
item.dt[grep('Capital Semiconductor', typeName)]
format(calculate.construction.cost(31416, ME = -1, price.dt = prices.hubs.20131014.dt[system == 'Jita'])$buildCost, big.mark= ',')
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup();
caprica.sell.dt
caprica.sell.dt[1:10]
caprica.sell.dt[typeID == 4246
caprica.sell.dt[typeID == 4247]
caprica.sell.dt[typeID == 4247]$price * 7000
caprica.sell.dt[typeID == 4247]$price * 21000
item.dt[grep('Orca', typeName)]
calculate.advanced.construction.cost(28606, ME = c(2, 40), price.dt = prices.hubs.20131014.dt[system == 'Amarr'
])
caprica.sell.dt
caprica.sell.dt[grep('Legion', typeName)]
caprica.sell.dt[grep('Legion', typeName)][grep('Null', typeName)]
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131018.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131018.dt; save(prices.hubs.20131018.dt, file = 'data/noautoload/prices/prices.hubs.20131018.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
lsos()
caprica.buy.dt
fread('~/tmp/cat.csv')
fread('~/tmp/cat.csv')
fread('~/tmp/cat.csv')[, list(typeName = V1, amount = V2)]
cat.dt <- fread('~/tmp/cat.csv')[, list(typeName = V1, amount = V2)]
setkeyv(cat.dt, typeName)
setkey(cat.dt, typeName)
caprica.buy.dt[cat.dt]
setkey(caprica.buy.dt, typeName)
caprica.buy.dt[cat.dt]
caprica.buy.dt[cat.dt][, sum(price * amount)]
caprica.buy.dt[cat.dt][, sum(price * amount, na.rm = TRUE)]
format(caprica.buy.dt[cat.dt][, sum(price * amount, na.rm = TRUE)], big.mark = '.')
format(caprica.buy.dt[cat.dt][, sum(price * amount, na.rm = TRUE)], big.mark = ',')
caprica.buy.dt
caprica.buy.dt[typeName == 'Robotics']
caprica.buy.dt[typeName == 'Robotics']$price
caprica.buy.dt[typeName == 'Robotics']$price * 3456
caprica.buy.dt[typeName == 'Robotics']$price * 3456 * 1.1
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup();
get.component.data
item.dt
item.dt[typeName == 'Robotics']
item.dt[groupID == 1040]
item.dt[groupID == 1040]$typeID
get.component.data(2344)
get.component.data(9848)
data.table(compID = item.dt[groupID == 1040]$typeID)[, get.component.data(.BY$compID), by = compID)
data.table(compID = item.dt[groupID == 1040]$typeID)[, get.component.data(.BY$compID), by = compID
data.table(compID = item.dt[groupID == 1040]$typeID)[, get.component.data(.BY$compID), by = compID]
lsos()
gc()
caprica.sell.dt
caprica.sell.dt[1:10]
caprica.sell.dt[3]
caprica.sell.dt[3]$price * 21000
lsos()
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131027.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131027.dt; save(prices.hubs.20131027.dt, file = 'data/noautoload/prices/prices.hubs.20131027.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131027.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131027.dt; save(prices.hubs.20131027.dt, file = 'data/noautoload/prices/prices.hubs.20131027.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
caprica.sell.dt[3]$price * 21000
caprica.sell.dt[3]$price
caprica.sell.dt[3]$price * 7000
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131029.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131029.dt; save(prices.hubs.20131029.dt, file = 'data/noautoload/prices/prices.hubs.20131029.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
q()
y
dev_mode(TRUE); startup();
dev_mode(TRUE); load_all('../evecalc/'); startup();
lsos()
caprica.buy.dt
fread('~/tmp/steve.csv')
steve.dt <- fread('~/tmp/steve.csv')
setkey(steve.dt, typeName)
caprica.buy.dt[steve.dt]
setkey(caprica.buy.dt, typeName)
caprica.buy.dt[steve.dt]
caprica.buy.dt[steve.dt][, sum(price * quantity)]
caprica.sell.dt
caprica.sell.dt[1:5]
caprica.sell.dt[typeID == 4247]
caprica.sell.dt[typeID == 4247]$price * 28000
kailo.dt <- fread('~/tmp/kailo.dt')
setkey(kailo.dt, typeName)
caprica.buy.dt[kailo.dt]
item.dt[typeName == 'Noble Metals'
item.dt[typeName == 'Noble Metals']
idlist.marketdata
sort(idlist.marketdata)
item.dt[typeName == 'Noble Metals']
item.dt[categoryName == 'Planetary Resources']
startup();
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131103.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131103.dt; save(prices.hubs.20131103.dt, file = 'data/noautoload/prices/prices.hubs.20131103.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131103.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131103.dt; save(prices.hubs.20131103.dt, file = 'data/noautoload/prices/prices.hubs.20131103.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
setkey(caprica.buy.dt, typeName)
caprica.buy.dt[kailo.dt]
rm(list = ls())
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131103.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131103.dt; save(prices.hubs.20131103.dt, file = 'data/noautoload/prices/prices.hubs.20131103.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
setkey(caprica.buy.dt, typeName)
caprica.buy.dt[kailo.dt]
kailo.dt <- fread('~/tmp/kailo.dt')
setkey(kailo.dt, typeName)
caprica.buy.dt[kailo.dt]
idlist.marketdata
caprica.buy.dt[kailo.dt]
item.dt[grep('Noble', typeName)]
item.dt[grep('Noble Met', typeName)]
sort(idlist.marketdata)
caprica.buy.dt[typeID == 2270]
get.evecentral.data(2270)
get.evecentral.data
get.evecentral.data(2270, system = c('Amarr', 'Dodixie', 'Jita', 'Rens'), name.dt = name.dt)
caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
caprica.buy.dt[typeID == 2270]
idlist.buyitems
idlist.buyitems   <- c(idlist.asteroid, idlist.material, idlist.pi, idlist.pi.p0, idlist.gas, idlist.datacore, idlist.decryptor, idlist.commodity, idlist.extras, idlist.subsystem);
idlist.sellitems  <- c(idlist.posfuel, idlist.subsystem);
idlist.marketdata <- sort(unique(idlist.marketdata));
idlist.buyitems   <- sort(unique(idlist.buyitems));
idlist.sellitems  <- sort(unique(idlist.sellitems));
caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
caprica.buy.dt
caprica.buy.dt[typeID == 2270]
caprica.buy.dt[kailo.dt]
setkey(caprica.buy.dt, typeName)
caprica.buy.dt[kailo.dt]
caprica.buy.dt[kailo.dt][, sum(price * amount)]
caprica.buy.dt[kailo.dt][, sum(price * amount, na.rm = TRUE)]
caprica.buy.dt[kailo.dt]
caprica.buy.dt[kailo.dt][grep('Sleeper', groupName)]
caprica.buy.dt[kailo.dt][grep('Sleeper', groupName)][, sum(price * amount)]
caprica.buy.dt[kailo.dt][grep('Sleeper', groupName)][, sum(price * amount)] * 1.05
fread('~/tmp/kailo.csv')
kailo.dt <- fread('~/tmp/kailo.csv')[, list(typeName, amount)]
setkey(kailo.dt, typeName
setkey(kailo.dt, typeName)
caprica.buy.dt[kailo.dt]
caprica.buy.dt[kailo.dt][, sum(price * amount)]
caprica.buy.dt[kailo.dt][, sum(price * amount, na.rm = TRUE)]
fread('~/tmp/cat.csv')
fread('~/tmp/cat.csv')[, list(typeName, amount), key = 'typeName']
fread('~/tmp/cat.csv')[, list(typeName, amount)]
cat.dt <- fread('~/tmp/cat.csv')[, list(typeName, amount)]; setkey(cat.dt, typeName)
caprica.buy.dt[cat.dt]
item.dt[grep('Wrecked Hull Section')]
item.dt[grep('Wrecked Hull Section', typeName)]
item.dt[categoryID = 34]
item.dt[categoryID == 34]
rm(idlist.marketdata)
dev_mode(TRUE); load_all('../evecalc/'); startup();
item.dt[typeID %in% idlist.marketdata]
item.dt[typeID %in% idlist.marketdata][grep('Wrecked', typeName)]
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131107.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131107.dt; save(prices.hubs.20131107.dt, file = 'data/noautoload/prices/prices.hubs.20131107.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
caprica.buy.dt[cat.dt]
setkey(caprica.buy.dt, typeName)
caprica.buy.dt[cat.dt]
caprica.buy.dt[cat.dt][, sum(price * amount)]
caprica.buy.dt[cat.dt][, sum(price * amount, na.rm = TRUE)]
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131113.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131113.dt; save(prices.hubs.20131113.dt, file = 'data/noautoload/prices/prices.hubs.20131113.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
profit.dt <- calculate.construction.profit(construction.ships$typeID, ME = 30, price.dt = prices.hubs.20131113.dt[system == 'Dodixie'])
profit.dt
caprica.sell.dt
caprica.sell.dt[grep('Amarr', typeName)]
caprica.sell.dt[grep('Amarr', typeName)]$price * 28000
caprica.sell.dt[grep('Amarr', typeName)]$price * 7000
q()
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131122.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131122.dt; save(prices.hubs.20131122.dt, file = 'data/noautoload/prices/prices.hubs.20131122.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131122.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131122.dt; save(prices.hubs.20131122.dt, file = 'data/noautoload/prices/prices.hubs.20131122.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
caprica.sell.dt
caprica.sell.dt[3]
fread('~/tmp/kailo.csv')
kailo.dt <- fread('~/tmp/kailo.csv')
setkey(kailo.dt, typeName)
caprica.buy.dt[kailo.dt]
setkey(caprica.buy.dt, typeName)
caprica.buy.dt[kailo.dt]
caprica.buy.dt[kailo.dt][groupName == 'Sleeper Components']
caprica.buy.dt[kailo.dt][groupName == 'Sleeper Components'][, sum(price * amount)]
caprica.buy.dt[kailo.dt][groupName == 'Harvestable Cloud'][, sum(price * amount)]
caprica.buy.dt[kailo.dt][groupName == 'Basic Commodities'][, sum(price * amount)]
caprica.buy.dt[kailo.dt][groupName == 'Basic Commodities']
q()
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131124.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131124.dt; save(prices.hubs.20131124.dt, file = 'data/noautoload/prices/prices.hubs.20131124.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))];
fread('~/Dropbox/Temp/catcando.csv')
catcando.dt <- fread('~/Dropbox/Temp/catcando.csv')
setkey(catcando.dt, typeName)
caprica.buy.dt[catcando.dt]
setkey(caprica.buy.dt, typeName)
caprica.buy.dt[catcando.dt]
caprica.buy.dt[catcando.dt][order(groupName)]
caprica.buy.dt[catcando.dt][groupName != "Ancient Relics"]
caprica.buy.dt[catcando.dt][categoryName != "Ancient Relics"]
caprica.buy.dt[catcando.dt][categoryName != "Ancient Relics"][, sum(amount * price)]
format(caprica.buy.dt[catcando.dt][categoryName != "Ancient Relics"][, sum(amount * price)], big.mark = ',')
caprica.buy.dt[3]
caprica.buy.dt[grep('Amarr', typeName)]
caprica.buy.dt[typeID == 4247]
caprica.sell.dt
caprica.sell.dt[3]
caprica.sell.dt[3]$price * 28000
lsos()
q()
y
source('src/setup.R')
fread('~/tmp/tumbles.csv')
tumbles.dt <- fread('~/tmp/tumbles.csv'); setkey(tumbles.dt, typeName)
caprica.buy.dt[tumbles.dt]
caprica.buy.dt[tumbles.dt][, sum(price * amount)]
format(caprica.buy.dt[tumbles.dt][, sum(price * amount)], big.mark = ',')
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131124.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131124.dt; save(prices.hubs.20131124.dt, file = 'data/noautoload/prices/prices.hubs.20131124.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20131216.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20131216.dt; save(prices.hubs.20131216.dt, file = 'data/noautoload/prices/prices.hubs.20131216.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
caprica.buy.dt
fread('~/Dropbox/Temp/varos.csv')
varos.dt <- fread('~/Dropbox/Temp/varos.csv')
varos.dt[, typeName := str_trim(typeName)]
library(stringr)
str_trim(varos.dt$typeName)
varos.dt[, typeName := str_trim(typeName)]
varos.dt
caprica.buy.dt[varos.dt]
caprica.buy.dt[varos.dt][, sum(price * quantity)]
caprica.buy.dt[varos.dt][, sum(price * quantity)]
format(caprica.buy.dt[varos.dt][, sum(price * quantity)], big.mark = ',')
caprica.buy.dt[varos.dt][, sum(price * quantity)]
caprica.buy.dt[varos.dt]
within(caprica.buy.dt[varos.dt], { cost = price * quantity })
within(caprica.buy.dt[varos.dt], { cost = price * quantity })[order(-cost)]
within(caprica.buy.dt[varos.dt], { cost = price * quantity })[categoryName %in% c('Commodity', 'Material')][order(-cost)]
within(caprica.buy.dt[varos.dt], { cost = price * quantity })[categoryName %in% c('Commodity', 'Material')][order(-cost)][, sum(cost)]
within(caprica.buy.dt[varos.dt], { cost = price * quantity })[groupName %in% c('Mineral', 'Tool', 'Composite')]
within(caprica.buy.dt[varos.dt], { cost = price * quantity })[groupName %in% c('Mineral', 'Tool', 'Composite')][, sum(cost)]
within(caprica.buy.dt[varos.dt], { cost = price * quantity })[groupName %in% c('Mineral', 'Tool', 'Composite', 'Construction Components')][, sum(cost)]
caprica.buy.dt[varos.dt]$groupName
unique(caprica.buy.dt[varos.dt]$groupName)
sort(unique(caprica.buy.dt[varos.dt]$groupName))
q()
y
source("src/setup.R", echo = TRUE);
lsos()
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140201.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140201.dt; save(prices.hubs.20140201.dt, file = 'data/noautoload/prices/prices.hubs.20140201.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
caprica.sell.dt
caprica.sell.dt[3]
caprica.sell.dt[3]$price
caprica.sell.dt[3]$price * 19600
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140212.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140212.dt; save(prices.hubs.20140212.dt, file = 'data/noautoload/prices/prices.hubs.20140212.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
caprica.sell.dt
caprica.sell.dt[3]
caprica.sell.dt[3]$price
caprica.sell.dt[3]$price * 21000
format(caprica.sell.dt[3]$price * 21000, big.mark = ',')
format(caprica.sell.dt[3]$price * 28000 * 2, big.mark = ',')
format(caprica.sell.dt[3]$price * (28000 * 2 + 39000), big.mark = ',')
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140222.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140222.dt; save(prices.hubs.20140222.dt, file = 'data/noautoload/prices/prices.hubs.20140222.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
caprica.sell.dt[3]$price
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140228.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140228.dt; save(prices.hubs.20140228.dt, file = 'data/noautoload/prices/prices.hubs.20140228.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
caprica.sell.dt[3]
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140305.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140305.dt; save(prices.hubs.20140305.dt, file = 'data/noautoload/prices/prices.hubs.20140305.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140305.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140305.dt; save(prices.hubs.20140305.dt, file = 'data/noautoload/prices/prices.hubs.20140305.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140305.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140305.dt; save(prices.hubs.20140305.dt, file = 'data/noautoload/prices/prices.hubs.20140305.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140305.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140305.dt; save(prices.hubs.20140305.dt, file = 'data/noautoload/prices/prices.hubs.20140305.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140305.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140305.dt; save(prices.hubs.20140305.dt, file = 'data/noautoload/prices/prices.hubs.20140305.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140305.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140305.dt; save(prices.hubs.20140305.dt, file = 'data/noautoload/prices/prices.hubs.20140305.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
fread("~/Dropbox/Temp/bugg_gas.csv")
merge(fread("~/Dropbox/Temp/bugg_gas.csv"), caprica.buy.dt)
merge(fread("~/Dropbox/Temp/bugg_gas.csv"), caprica.buy.dt, by = 'typeName')
bugg.dt <- fread("~/Dropbox/Temp/bugg_gas.csv", key = 'typeName')
bugg.dt <- fread("~/Dropbox/Temp/bugg_gas.csv"); setkey(bugg.dt, typeName);
bugg.dt[caprica.buy.dt]
caprica.buy.dt[bugg.dt]
caprica.buy.dt[bugg.dt][, sum(price * amount)]
format(caprica.buy.dt[bugg.dt][, sum(price * amount)], big.mark = ',')
currency(caprica.buy.dt[bugg.dt][, sum(price * amount)])
dollar(caprica.buy.dt[bugg.dt][, sum(price * amount)])
??dollar
library(help = 'dollar')
library(help = 'scales')
fread("~/Dropbox/Temp/varos_20140309.csv")
varos.dt <- fread("~/Dropbox/Temp/varos_20140309.csv")
setkey(varos.dt, typeName)
caprica.buy.dt[varos.dt]
caprica.buy.dt[varos.dt][, sum(price * quantity)]
q()
y
y
source("src/setup.R", echo = TRUE)
caprica.buy.dt
caprica.buy.dt[typeName == 'Amarr Fuel Blocks']
caprica.buy.dt[typeName == 'Amarr Fuel Block']
caprica.sell.dt[typeName == 'Amarr Fuel Block']
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140321.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140321.dt; save(prices.hubs.20140321.dt, file = 'data/noautoload/prices/prices.hubs.20140321.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
fread("~/Dropbox/Temp/steve.csv")
steve.dt <-fread("~/Dropbox/Temp/steve.csv")
steve.dt <- fread("~/Dropbox/Temp/steve.csv")
setkey(steve.dt, typeName)
caprica.buy.dt[steve.dt]
within(caprica.buy.dt[steve.dt], { cost = price * quantity; cost.str = dollar(price * quantity) })
library(scales)
within(caprica.buy.dt[steve.dt], { cost = price * quantity; cost.str = dollar(price * quantity) })
?dollar
within(caprica.buy.dt[steve.dt], { cost = price * quantity; cost.str = dollar(price * quantity) })
within(caprica.buy.dt[steve.dt], { cost = price * quantity; cost.str = dollar(price * quantity) })[, sum(cost)]
dollar(within(caprica.buy.dt[steve.dt], { cost = price * quantity; cost.str = dollar(price * quantity) })[, sum(cost)])
3715 * 44102.74
dollar(3715 * 44102.74)
dollar(6389 * 44102.74)
6389 * 44102.74
caprica.buy.dt[data.table(typeName = c("Fullerite-C320", "Fullerite-C540"), quantity = c(4022, 3794), key = 'typeName')]
caprica.buy.dt[data.table(typeName = c("Fullerite-C320", "Fullerite-C540"), quantity = c(4022, 3794), key = 'typeName')][, sum(price * quantity)]
caprica.buy.dt[data.table(typeName = c("Fullerite-C320", "Fullerite-C540", "Fullerite-C50"), quantity = c(4022, 3794, 4500), key = 'typeName')][, sum(price * quantity)]
lsos()
ls(pattern = '2013')
rm(list = ls(pattern = '2013'))
rm(list = ls(pattern = '201401'))
rm(list = ls(pattern = '201402'))
lsos()
rm(catcando.dt, cat.dt, varos.dt, bugg.dt)
steve.dt
lsos()
rm(kailo.dt, tumbles.dt)
bpcost
rm(bpcost)
lsos()
lsos(n = 50)
lsos(n = 60)
lsos()
profit.dt
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140327.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140327.dt; save(prices.hubs.20140327.dt, file = 'data/noautoload/prices/prices.hubs.20140327.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
caprica.sell.dt[3]
caprica.sell.dt[3]$price * 20000
q()
y
caprica.sell.dt[3]
caprica.sell.dt
dev_mode(TRUE); load_all('../evecalc/'); startup();
caprica.sell.dt
caprica.sell.dt[4]
caprica.sell.dt[3]
caprica.sell.dt[3]$price
caprica.sell.dt[3]$price * 20000
caprica.sell.dt[3]
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140410.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140410.dt; save(prices.hubs.20140410.dt, file = 'data/noautoload/prices/prices.hubs.20140410.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
lsos()
prices.hubs.20140410.dt
prices.hubs.20140410.dt[system == 'Amarr']
item.dt[prices.hubs.20140410.dt]
item.dt[prices.hubs.20140410.dt][system == 'Amarr'][typeName == 'Clear Icicle']
item.dt[prices.hubs.20140410.dt][system == 'Amarr'][typeName == 'Clear Icicle'][, 0.5 * (bid + ask)]
item.dt[prices.hubs.20140410.dt][system == 'Amarr'][typeName == 'Clear Icicle'][, 0.5 * (bid + ask)] * 2200
item.dt[prices.hubs.20140410.dt][system == 'Amarr'][typeName == 'Clear Icicle'][, 0.5 * (bid + ask)] * 221
format(item.dt[prices.hubs.20140410.dt][system == 'Amarr'][typeName == 'Clear Icicle'][, 0.5 * (bid + ask)] * 221, big.marks = ',')
format(item.dt[prices.hubs.20140410.dt][system == 'Amarr'][typeName == 'Clear Icicle'][, 0.5 * (bid + ask)] * 221, big.mark = ',')
caprica.sell.d
caprica.sell.dt
caprica.sell.dt[3]
caprica.sell.dt[3]$price * 20000
 prices.hubs.20140410.dt
item.dt[ prices.hubs.20140410.dt]
item.dt[ prices.hubs.20140410.dt][grep("Ice", groupName)]
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140418.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140418.dt; save(prices.hubs.20140418.dt, file = 'data/noautoload/prices/prices.hubs.20140418.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
dev_mode(TRUE);
load_all("../evecalc/");
startup();
startup();
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140418.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140418.dt; save(prices.hubs.20140418.dt, file = 'data/noautoload/prices/prices.hubs.20140418.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
data.connection
lsos()
rm(list = ls())
startup();
load_all("../evecalc/")
startup();
data.connection
name.dt
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140418.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140418.dt; save(prices.hubs.20140418.dt, file = 'data/noautoload/prices/prices.hubs.20140418.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140418.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140418.dt; save(prices.hubs.20140418.dt, file = 'data/noautoload/prices/prices.hubs.20140418.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
name.dt
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140418.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140418.dt; save(prices.hubs.20140418.dt, file = 'data/noautoload/prices/prices.hubs.20140418.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140418.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140418.dt; save(prices.hubs.20140418.dt, file = 'data/noautoload/prices/prices.hubs.20140418.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140418.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140418.dt; save(prices.hubs.20140418.dt, file = 'data/noautoload/prices/prices.hubs.20140418.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140418.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140418.dt; save(prices.hubs.20140418.dt, file = 'data/noautoload/prices/prices.hubs.20140418.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140418.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140418.dt; save(prices.hubs.20140418.dt, file = 'data/noautoload/prices/prices.hubs.20140418.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
idlist.marketdata
item.dt
item.dt[typeID %in% idlist.marketdata]
item.dt[typeID %in% idlist.marketdata]$marketGroupID
test.dt <- get.evecentral.data(order(idlist.marketdata))
get.evecentral.data
test.dt <- get.evecentral.data(order(idlist.marketdata), system = 'Dodixie', name.dt = name.dt)
get.evecentral.data
test.dt <- get.evecentral.data(order(idlist.marketdata), system = 'Dodixie', name.dt = name.dt, block.size = 2)
item.dt[typeID == 1]
item.dt[typeID == 2]
item.dt
idlist.marketdata
test.dt <- get.evecentral.data(sort(idlist.marketdata), system = 'Dodixie', name.dt = name.dt, block.size = 2)
test.dt <- get.evecentral.data(sort(idlist.marketdata), system = 'Dodixie', name.dt = name.dt, block.size = 20)
item.dt[typeID %in% 33513:33627]
item.dt[typeID %in% 33513:33627][!is.na(marketGardenID)]
item.dt[typeID %in% 33513:33627][!is.na(marketGroupID)]
test.dt <- get.evecentral.data(sort(idlist.marketdata), system = 'Dodixie', name.dt = name.dt, block.size = 20)
idlist.marketdata[idlist.marketdata %in% 33513:33625]
item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33625]]
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33625]]$typeID, name.dt = name.dt, system = 'Dodixie')
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33625]]$typeID[1:5], name.dt = name.dt, system = 'Dodixie')
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33625]]$typeID[6:10], name.dt = name.dt, system = 'Dodixie')
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33625]]$typeID[1:10], name.dt = name.dt, system = 'Dodixie')
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33625]]$typeID[11:19], name.dt = name.dt, system = 'Dodixie')
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33625]]$typeID[11:15], name.dt = name.dt, system = 'Dodixie')
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33625]]$typeID[16:19], name.dt = name.dt, system = 'Dodixie')
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33625]]$typeID[16:17], name.dt = name.dt, system = 'Dodixie')
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33625]]$typeID[16], name.dt = name.dt, system = 'Dodixie')
item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33625]][16]
item.dt[marketGroupID == 738]
get.evecentral.data(item.dt[marketGroupID == 738], name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[marketGroupID == 738]$typeID, name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[marketGroupID == 738]$typeID[1], name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[marketGroupID == 738]$typeID[1:10], name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[marketGroupID == 738]$typeID[11:15], name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[marketGroupID == 738]$typeID[11:13], name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[marketGroupID == 738]$typeID[11], name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[marketGroupID == 738]$typeID[12], name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[marketGroupID == 738]$typeID[13], name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[marketGroupID == 738]$typeID[13], name.dt = name.dt, system = 'Jita')
item.dt[marketGroupID == 738][13]
item.dt[grep("Rogue Drone", typeName)]
item.dt[grep("Rogue Drone.*Chip", typeName)]
item.dt[marketGroupID == 738]
get.evecentral.data(item.dt[marketGroupID == 738]$typeID, name.dt = name.dt, system = 'Dodixie')
get.evecentral.data(item.dt[marketGroupID == 738]$typeID[1:10], name.dt = name.dt, system = 'Dodixie')
get.evecentral.data(item.dt[marketGroupID == 738]$typeID[1:12], name.dt = name.dt, system = 'Dodixie')
get.evecentral.data(item.dt[marketGroupID == 738]$typeID[13], name.dt = name.dt, system = 'Dodixie')
item.dt[marketGroupID == 738]
get.evecentral.data(item.dt[marketGroupID == 738]$typeID[13], name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[marketGroupID == 738]$typeID[12], name.dt = name.dt, system = 'Jita')
idlist.commodity
dev_mode(TRUE); load_all('../evecalc/'); startup();
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.hubs.20140425.dt <- get.evecentral.data(idlist.marketdata, name.dt = name.dt, system = c('Jita', 'Amarr', 'Rens', 'Dodixie')); use.prices.dt <- prices.hubs.20140425.dt; save(prices.hubs.20140425.dt, file = 'data/noautoload/prices/prices.hubs.20140425.rda', compress = 'xz'); caprica.buy.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.buyitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 0.9, 2))]; caprica.sell.dt  <- item.dt[use.prices.dt][system == 'Jita'][typeID %in% idlist.sellitems][, list(typeID, date, typeName, groupName, categoryName, price = round(bid * 1.05, 2))]; setkey(caprica.buy.dt, typeName);
get.evecentral.data
dev_mode(TRUE); load_all('../evecalc/'); startup();
update.prices
dev_mode(TRUE); load_all('../evecalc/'); startup();
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt);
idlist.marketdata[idlist.marketdata %in% 33513:33655]
item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]][1:10], name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID[1:10], name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID[11:20], name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID[11:15], name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID[16:20], name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID[16:18], name.dt = name.dt, system = 'Jita')
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID[16], name.dt = name.dt, system = 'Jita')
item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]][16]
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID[17], name.dt = name.dt, system = 'Jita')
item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt);
get.evecentral.data(idlist.commodity, name.dt = name.dt, system = 'Jita')
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt);
item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]
item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID, name.dt = name.dt)
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID[1:10], name.dt = name.dt)
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID[11:15], name.dt = name.dt)
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID[16:18], name.dt = name.dt)
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID[16], name.dt = name.dt)
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID[17], name.dt = name.dt)
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID[18], name.dt = name.dt)
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID[19], name.dt = name.dt)
get.evecentral.data(item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]$typeID[20], name.dt = name.dt)
item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]]
item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33655]][16:20]
rm(idlist.marketdata)
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt);
ls(pattern = 'idlist')
rm(list = ls(pattern = 'idlist'))
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt);
idlist.exclude
idlist.commodity
idlist.marketdata
idlist.asteroid
idlist.buyitems
idlist.sellitems
idlist.commodity
idlist.marketdata <- c(idlist.asteroid, idlist.material, idlist.pi, idlist.pi.p0, idlist.ship, idlist.gas, idlist.t2mods, idlist.datacore, idlist.decryptor, idlist.commodity, idlist.extras, idlist.subsystem, idlist.relics);

idlist.marketdata
sort(idlist.marketdata)
idlist.marketdata
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt);
item.dt[typeID %in% idlist.marketdata[idlist.marketdata %in% 33513:33677]]
item.dt[grep("Edition", typeName)]
item.dt[grep("Edition", typeName)][!is.na(marketGroupID)]
item.dt[grep("Edition", typeName)][!is.na(marketGroupID)][5:13]
item.dt[grep("Edition", typeName)][!is.na(marketGroupID)][5:13]$typeID
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt);
rm(list = ls(pattern = 'idlist'))
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt);
item.dt[typeID == 33612]
item.dt[typeID == 33677]
rm(list = ls(pattern = 'idlist'))
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
prices.lst
prices.lst$caprica.sell.dt
prices.lst$caprica.sell.dt[3]
q()
y
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup();
prices.lst$caprica.sell.dt
prices.lst$caprica.buy.dt
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
prices.lst$caprica.sell.dt
fread("~/Dropbox/Temp/tikop.csv")
fread("~/Dropbox/Temp/tikop.csv", keyname = 'typeName')
?fread
tikop.dt <- fread("~/Dropbox/Temp/tikop.csv", keyname = 'typeName'); setkey(tikop.dt, typeName);
tikop.dt <- fread("~/Dropbox/Temp/tikop.csv"); setkey(tikop.dt, typeName);
tikop.dt <- fread("~/Dropbox/Temp/tikop.csv"); setkey(tikop.dt, typeName); prices.lst$caprica.buy.dt[tikop.dt]
tikop.dt <- fread("~/Dropbox/Temp/tikop.csv"); setkey(tikop.dt, typeName); prices.lst$caprica.buy.dt[tikop.dt][, sum(price * quantity)]
prices.lst$caprica.buy.dt[tikop.dt]
prices.lst$caprica.buy.dt[tikop.dt][, sum(price * quantity)]
dollar(prices.lst$caprica.buy.dt[tikop.dt][, sum(price * quantity)])
library(scales)
dollar(prices.lst$caprica.buy.dt[tikop.dt][, sum(price * quantity)])
prices.lst$caprica.sell.dt
prices.lst$caprica.sell.dt[3]
prices.lst$caprica.sell.dt[3]$price * 20000
363532000
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
lsos()
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup();
fread("~/Dropbox/Temp/alyxxa_20140607.csv")
alyxxa.dt <- fread("~/Dropbox/Temp/alyxxa_20140607.csv")
setkey(alyxxa.dt, typeName)
prices.lst$caprica.buy.dt[alyxxa.dt]
prices.lst$caprica.buy.dt[alyxxa.dt][, sum(price * quantity)]
dollar(prices.lst$caprica.buy.dt[alyxxa.dt][, sum(price * quantity)])
library(scales)
dollar(prices.lst$caprica.buy.dt[alyxxa.dt][, sum(price * quantity)])
tor.dt <- fread("~/Dropbox/Temp/tor_20140607.csv")
setkey(tor.dt, typeName)
tor.dt
dollar(prices.lst$caprica.buy.dt[tor.dt][, sum(price * quantity)])
prices.lst$caprica.buy.dt[tor.dt][, sum(price * quantity)]
prices.lst$caprica.buy.dt[tor.dt]
prices.lst$caprica.sell.dt[3]
prices.lst$caprica.sell.dt[3]$price
prices.lst$caprica.sell.dt[3]$price * 20000
fread("~/Dropbox/Temp/zep_20140608.csv")
fread("~/Dropbox/Temp/zep_20140608.csv")
fread("~/Dropbox/Temp/zep_20140608.csv")
zep.dt <- fread("~/Dropbox/Temp/zep_20140608.csv"); setkey(zep.dt, typeName)
prices.lst$caprica.buy.dt[zep.dt]
prices.lst$prices.hubs.dt
item.dt[zep.dt]
item.dt
merge(item.dt, zep.dt, by = 'typeName')
merge(item.dt, zep.dt, by = 'typeName')$typeID
zep.jita.dt <- get.evecentral.data(merge(item.dt, zep.dt, by = 'typeName')$typeID, system = 'Jita')
zep.jita.dt <- get.evecentral.data(merge(item.dt, zep.dt, by = 'typeName')$typeID, system = 'Jita', name.dt = name.dt)
zep.jita.dt
zep.dt
zep.jita.dt
merge(zep.jita.dt, item.dt, by = 'typeID')
merge(zep.jita.dt, item.dt, by = 'typeID')[categoryName == 'Charge']
merge(zep.jita.dt, item.dt, by = 'typeID')[categoryName == 'Charge'][, sum(quantity * bid)]
zep.jita.dt
zep.dt
merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')[categoryName == 'Charge']
merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')
merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')[categoryName == 'Charge']
merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')[categoryName == 'Charge'][, sum(bid * quantity)]
merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')[categoryName == 'Charge'][, sum(bid * 0.9 * quantity)]
merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')
merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')[categoryID != 'Charge']
merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')[categoryID != 'Charge'][, sum(bid * 0.9 * quantity)]
dollar(merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')[categoryID != 'Charge'][, sum(bid * 0.9 * quantity)])
merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')[categoryName == 'Charge'][, sum(bid * 0.9 * quantity)]
dollar(merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')[categoryID != 'Charge']
dollar(merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')[categoryID != 'Charge']
 merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')[categoryID != 'Charge']
 merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')[categoryID != 'Charge'][, list(typeName, groupName, categoryName, quantity, price = bid * 0.9)]
 merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')[categoryID != 'Charge'][, list(typeName, groupName, categoryName, quantity, price = bid * 0.9)]
 merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')[categoryID != 'Charge'][, list(typeName, groupName, categoryName, quantity, price = bid * 0.9)][, sum(quantity * price)]
 merge(zep.jita.dt, merge(zep.dt, item.dt, by = 'typeName'), by = 'typeID')[categoryID != 'Charge'][, list(typeName, groupName, categoryName, quantity, price = bid * 0.9)][, round(sum(quantity * price), 2)]
fread("~/Dropbox/Temp/belle_20140609.csv")
belle.dt <- fread("~/Dropbox/Temp/belle_20140609.csv"); setkey(belle.dt, typeName)
prices.lst$caprica.buy.dt[belle.dt]
prices.lst$caprica.buy.dt[belle.dt][, sum(price * quantity)]
dollar(prices.lst$caprica.buy.dt[belle.dt][, sum(price * quantity)])
prices.lst$caprica
prices.lst
prices.lst$caprica.buy.dt
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
gc()
lsos()
gc()
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
xzfile
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
prices.lst$caprica.buy.dt
zep.dt <- fread("~/Dropbox/Temp/zep_20140614.csv"); setkey(zep.dt, typeName)
prices.lst$caprica.buy.dt[zep.dt]
prices.lst$caprica.buy.dt[zep.dt][, sum(price * quantity)]
dollar(prices.lst$caprica.buy.dt[zep.dt][, sum(price * quantity)])
library(scales)
dollar(prices.lst$caprica.buy.dt[zep.dt][, sum(price * quantity)])
belle.dt <- fread("~/Dropbox/Temp/belle_20140613.csv"); setkey(belle.dt, typeName);
dollar(prices.lst$caprica.buy.dt[belle.dt]
prices.lst$caprica.buy.dt[belle.dt]
prices.lst$caprica.buy.dt[belle.dt][, sum(price * quantity)]
dollar(prices.lst$caprica.buy.dt[belle.dt][, sum(price * quantity)])
prices.lst$caprica.buy.dt[zep.dt]
prices.lst$caprica.buy.dt[zep.dt, sum(price * quantity)]
prices.lst$caprica.buy.dt[zep.dt][, sum(price * quantity)]
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
4
dev_mode(TRUE); load_all('../evecalc/'); startup();
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
prices.lst$caprica.sell.dt[3]
prices.lst$caprica.sell.dt[3]$price * 20000
prices.lst$caprica.sell.dt[3]$price * 60160
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
prices.lst$caprica.buy.dt
gc()
lsos()
fread("~/Dropbox/EVEOnline/pricequotes/zep_20140625.csv");
zep.dt <- fread("~/Dropbox/EVEOnline/pricequotes/zep_20140625.csv"); setkey(zep.dt, typeName)
gc()
lsos()
gc()
lsos()
lsos()
gc()
prices.lst$caprica.buy.dt[zep.dt]
prices.lst$caprica.buy.dt[zep.dt][, sum(price * quantity)]
zep.dt <- fread("~/Dropbox/EVEOnline/pricequotes/zep_20140625.csv"); setkey(zep.dt, typeName)
prices.lst$caprica.buy.dt[zep.dt][, sum(price * quantity)]
prices.lst$caprica.buy.dt[zep.dt]
prices.lst$caprica.buy.dt[zep.dt][, sum(price * quantity)]
prices.lst$caprica.buy.dt[zep.dt][groupName != 'Refined Commodities'][, sum(price * quantity)]
tyr.dt <- fread("~/Dropbox/EVEOnline/pricequotes/tyr_20140627.csv"); setkey(tyr.dt, typeName);
tyr.dt
prices.lst$caprica.buy.dt[tyr.dt]
prices.lst$caprica.buy.dt[tyr.dt][typeID != 4247]
prices.lst$caprica.buy.dt[tyr.dt][typeID != 4247, sum(price * quantity)]
prices.lst$caprica.sell.dt
prices.lst$caprica.sell.dt[3]
prices.lst$caprica.sell.dt[3]$price
prices.lst$caprica.sell.dt[3]$price * 10640
prices.lst$caprica.sell.dt[3]$price * 20000
prices.lst$caprica.sell.dt[3]$price * 30640
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
zep.dt <- fread("~/Dropbox/EVEOnline/pricequotes/zep_20140701.csv"); setkey(tyr.dt, typeName);
zep.dt <- fread("~/Dropbox/EVEOnline/pricequotes/zep_20140701.csv"); setkey(zep.dt, typeName);
zep.dt
prices.lst$caprica.buy.dt[zep.dt]
prices.lst$caprica.buy.dt[zep.dt][, sum(price * quantity)]
prices.lst$caprica.buy.dt[typeID == 30375]
prices.lst$caprica.sell.dt[typeID == 30375]
intersect(prices.lst$caprica.buy.dt$typeID, prices.lst$caprica.sell.dt$typeID)
prices.lst$caprica.buy.dt[typeID == 30124]
prices.lst$caprica.sell.dt[typeID == 30124]
prices.lst$caprica.buy.dt[typeID == 4247]
prices.lst$caprica.sell.dt[typeID == 4247]
prices.lst$caprica.buy.dt[zep.dt][, sum(price * quantity)]
prices.lst$caprica.sell.dt
prices.lst$caprica.sell.dt[3]
prices.lst$caprica.sell.dt[3]$price
prices.lst$caprica.sell.dt[3]$price * 3880
prices.lst$caprica.sell.dt[3]$price * 5000
prices.lst$caprica.sell.dt[3]$price * 20000
zep.dt <- data.table(typeName = c("Coolant", "Mechanical Parts"), quantity = c(3285, 1305), key = 'typeName')
zep.dt
prices.lst$caprica.buy.dt[zep.dt]
prices.lst$caprica.buy.dt[zep.dt][, sum(price * quantity * 1.1)]
prices.lst$caprica.sell.dt[3]
prices.lst$caprica.sell.dt[3] * 20000
prices.lst$caprica.sell.dt[3]$price * 20000
prices.lst$prices.hubs.dt
prices.lst$prices.hubs.dt[system == 'Jita']
item.dt[prices.lst$prices.hubs.dt[system == 'Jita']]
item.dt[prices.lst$prices.hubs.dt[system == 'Jita']][typeName %in% c("Coolant", "Mechanical Parts")]
zep.dt
zep.dt[item.dt[prices.lst$prices.hubs.dt[system == 'Jita']]]
zep.dt[prices.lst$prices.hubs.dt[system == 'Jita']]
merge(zep.dt, prices.lst$prices.hubs.dt[system == 'Jita'], by = 'typeName')
zep.dt
zep.dt$typeID <- c(9832,3689)
zep.dt
merge(zep.dt, prices.lst$prices.hubs.dt[system == 'Jita'], by = 'typeName')
merge(zep.dt, prices.lst$prices.hubs.dt[system == 'Jita'], by = 'typeID')
merge(zep.dt, prices.lst$prices.hubs.dt[system == 'Jita'], by = 'typeID')[, sum(bid * quantity)]
q()
y
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
getwd()
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
lsos()
ls(pattern = 'prices.hubs')
rm(list = ls(pattern = 'prices.hubs'))
lsos()
load("data/noautoload/prices/prices.hubs.20140722.rda")
lsos()
prices.hubs.20140722.dt
q()
y
dev_mode(TRUE); load_all('../evecalc/'); startup(); prices.lst <- update.prices(idlist.marketdata, name.dt = name.dt, idlist.buyitems = idlist.buyitems, idlist.sellitems = idlist.sellitems);
lsos()
prices.lst$caprica.buy.dt
kai.dt
kai.dt <- fread("~/Dropbox/EVEOnline/pricequotes/kai_20140730.csv"); setkey(kai.dt, typeName);
prices.lst$caprica.buy.dt[kai.dt]
within(prices.lst$caprica.buy.dt[kai.dt], { cost = price * quantity })
within(prices.lst$caprica.buy.dt[kai.dt], { cost = price * quantity })[, sum(cost)]
prices.lst$caprica.buy.dt[kai.dt, sum(price * quantity)]
prices.lst$caprica.buy.dt[kai.dt][, sum(price * quantity)]
lsos()
rm(prices.hubs.20140722.dt)
lsos()
q()
y
